// Code generated by go-bindata. DO NOT EDIT.
// sources:
// example/application/Dockerfile (143B)
// example/application/hello.go (433B)
// example/configurd/.gitignore (8B)
// example/configurd/.workdir/default/hello-service/.helmignore (342B)
// example/configurd/.workdir/default/hello-service/Chart.yaml (106B)
// example/configurd/.workdir/default/hello-service/overrides.yaml (240B)
// example/configurd/.workdir/default/hello-service/templates/_helpers.tpl (1.045kB)
// example/configurd/.workdir/default/hello-service/templates/deployment.yaml (2.067kB)
// example/configurd/.workdir/default/hello-service/templates/ingress.yaml (1.013kB)
// example/configurd/.workdir/default/hello-service/templates/service.yaml (476B)
// example/configurd/.workdir/default/hello-service/templates/tests/test-connection.yaml (557B)
// example/configurd/.workdir/default/hello-service/values.yaml (1.548kB)
// example/configurd/.workdir/default/hi-service/.helmignore (342B)
// example/configurd/.workdir/default/hi-service/Chart.yaml (106B)
// example/configurd/.workdir/default/hi-service/overrides.yaml (124B)
// example/configurd/.workdir/default/hi-service/templates/_helpers.tpl (1.045kB)
// example/configurd/.workdir/default/hi-service/templates/deployment.yaml (2.067kB)
// example/configurd/.workdir/default/hi-service/templates/ingress.yaml (1.013kB)
// example/configurd/.workdir/default/hi-service/templates/service.yaml (476B)
// example/configurd/.workdir/default/hi-service/templates/tests/test-connection.yaml (557B)
// example/configurd/.workdir/default/hi-service/values.yaml (1.548kB)
// example/configurd/charts/example/.helmignore (342B)
// example/configurd/charts/example/Chart.yaml (106B)
// example/configurd/charts/example/templates/_helpers.tpl (1.045kB)
// example/configurd/charts/example/templates/deployment.yaml (2.067kB)
// example/configurd/charts/example/templates/ingress.yaml (1.013kB)
// example/configurd/charts/example/templates/service.yaml (476B)
// example/configurd/charts/example/templates/tests/test-connection.yaml (557B)
// example/configurd/charts/example/values.yaml (1.548kB)
// example/configurd/charts/mongodb/.helmignore (342B)
// example/configurd/charts/mongodb/Chart.yaml (103B)
// example/configurd/charts/mongodb/templates/_helpers.tpl (1.045kB)
// example/configurd/charts/mongodb/templates/deployment.yaml (2.04kB)
// example/configurd/charts/mongodb/templates/pv.yaml (652B)
// example/configurd/charts/mongodb/templates/pvc.yaml (540B)
// example/configurd/charts/mongodb/templates/service.yaml (455B)
// example/configurd/charts/mongodb/templates/tests/test-connection.yaml (557B)
// example/configurd/charts/mongodb/values.yaml (1.688kB)
// example/configurd/namespaces/local/hello-group.yml (608B)
// example/configurd/namespaces/local/mongodb-group.yml (207B)
// example/configurd/services/example.yml (414B)
// example/configurd/services/hello-service.yml (93B)
// example/configurd/services/hi-service.yml (91B)
// example/configurd/services/mongodb-service.yml (41B)
// dummy/Dockerfile (159B)
// dummy/deployment-patch.yaml (587B)

package bindata

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _exampleApplicationDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcf\xcf\x49\xcc\x4b\xb7\x4a\xcc\x29\xc8\xcc\x4b\x55\x70\x0c\x56\x48\x2a\xcd\xcc\x49\x49\x2d\xe2\xe2\x72\xf6\x0f\x88\x54\xd0\x53\xd0\xe3\xe2\x0a\x0a\xf5\x53\x48\xcf\x87\xc8\x28\xe8\xe6\x2b\xe8\x67\xa4\xe6\xe4\xe4\x83\x64\xc0\x46\x40\xf4\x5a\xe5\x24\x96\xa4\x16\x97\x40\xf5\xe9\xea\xa6\x15\xe5\xe7\xda\x42\x0d\x83\xe9\x80\x50\x5c\x5c\xae\x7e\x21\x41\x91\x01\xfe\x9e\x7e\x21\x0a\xd1\x4a\x10\x41\xa5\x58\x40\x00\x00\x00\xff\xff\x8e\x35\x03\xdb\x8f\x00\x00\x00")

func exampleApplicationDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_exampleApplicationDockerfile,
		"example/application/Dockerfile",
	)
}

func exampleApplicationDockerfile() (*asset, error) {
	bytes, err := exampleApplicationDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/application/Dockerfile", size: 143, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3, 0x36, 0xe7, 0x1c, 0x88, 0xdf, 0x5b, 0x22, 0xdf, 0x12, 0xda, 0x63, 0x9f, 0x63, 0x25, 0xc1, 0x59, 0xa3, 0xb9, 0x87, 0x6a, 0x8d, 0x71, 0x6e, 0xc7, 0x58, 0x85, 0x82, 0xb2, 0x61, 0x9d, 0x67}}
	return a, nil
}

var _exampleApplicationHelloGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x50\xb1\x4e\x03\x31\x0c\x9d\xe3\xaf\xb0\x32\x25\xd5\xe9\x60\x44\x95\x3a\x74\xa0\x74\xa8\x04\xa2\x03\x03\x42\x55\xe8\xb9\x69\x44\x9a\x3b\x12\x97\x0a\xa1\xfe\x3b\x4a\x2e\x45\x95\x98\x6c\x3f\x3f\x3f\xdb\x6f\x30\xdb\x0f\x63\x09\x0f\xc6\x05\x00\x77\x18\xfa\xc8\xa8\x40\xc8\x9d\x37\x56\x82\x90\xbe\x2f\x21\x10\xdf\xec\x99\x07\x09\x1a\x60\x77\x0c\xdb\x32\xa1\x34\xfe\x80\xc8\xd4\x79\xd7\x45\x4a\x09\xa7\x33\xcc\x65\xbb\xe6\xe8\x82\x55\xd2\x8c\xb8\x6c\x50\x4e\xef\x6e\x73\xa8\x08\x72\x8f\xde\x25\xa6\x90\x33\xa9\x47\x99\x87\x48\xc4\x2e\xd8\x7f\x3a\xb6\x36\xb2\xc2\xf2\x7e\xb5\x7a\xcc\x49\x22\x4e\xc8\x7b\xc2\x4b\x17\x0f\x94\x92\xb1\x74\x91\x6b\x9f\x4c\x4c\xa4\x34\x80\xb0\x57\xca\xaf\x6f\xef\xdf\x4c\x6a\x72\xbd\x31\x73\xf6\x26\x74\x9e\x62\xa6\xe4\x5f\xdb\xe5\x58\x2f\x8e\x61\xab\xf2\xcf\xea\x34\xe2\xcf\x94\x86\x3e\x24\x7a\x89\x8e\x29\x36\x18\x71\x52\xf1\xcf\x23\x25\x2e\xa6\x88\x4d\x83\x1b\x9c\xe1\xa9\x2d\x2c\x65\xff\xf6\x88\x73\xde\xe5\x7b\xdb\x2e\x0c\x1b\xaf\xca\xe8\xaa\x58\x31\x0f\xdd\x9a\xe2\x57\x3d\xad\x7a\xda\x60\xbd\x4b\x6b\x38\xc3\x6f\x00\x00\x00\xff\xff\xff\x16\x4b\x76\xb1\x01\x00\x00")

func exampleApplicationHelloGoBytes() ([]byte, error) {
	return bindataRead(
		_exampleApplicationHelloGo,
		"example/application/hello.go",
	)
}

func exampleApplicationHelloGo() (*asset, error) {
	bytes, err := exampleApplicationHelloGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/application/hello.go", size: 433, mode: os.FileMode(0644), modTime: time.Unix(1591973660, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xcd, 0x87, 0x9, 0xe0, 0xf9, 0x4f, 0x29, 0x92, 0x5a, 0xfc, 0x94, 0x69, 0x46, 0xd4, 0xf9, 0xea, 0xb7, 0xf3, 0x5d, 0x93, 0xa0, 0x81, 0x98, 0x90, 0xa0, 0xec, 0xe0, 0x54, 0xf3, 0xdf, 0x70}}
	return a, nil
}

var _exampleConfigurdGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\x2b\xcf\x2f\xca\x4e\xc9\x2c\x02\x04\x00\x00\xff\xff\x88\x9c\x6c\x73\x08\x00\x00\x00")

func exampleConfigurdGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdGitignore,
		"example/configurd/.gitignore",
	)
}

func exampleConfigurdGitignore() (*asset, error) {
	bytes, err := exampleConfigurdGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.gitignore", size: 8, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0x8b, 0x89, 0x4e, 0xf6, 0xd, 0x6d, 0x93, 0x2c, 0x9a, 0x19, 0x29, 0x39, 0x26, 0x9e, 0xac, 0xa3, 0x68, 0x2e, 0x66, 0xe2, 0xc4, 0x66, 0xd0, 0xf9, 0x63, 0x7e, 0x54, 0x2a, 0x63, 0xfa, 0xda}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\xc7\x36\x96\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\xdc\xb2\xc2\x0a\x24\xe4\xd2\x18\x97\xc8\x19\xe3\x2a\x69\x96\x1c\x50\xfd\x74\xf2\x81\xd5\x51\x87\x97\x28\x0a\x5d\x6b\x2d\xcd\x14\x1a\x39\x25\x84\x54\x46\x2c\xde\xa6\x28\x39\xfc\x45\xe3\xe4\x4d\xce\x8c\xea\x2d\xfe\xf0\x3e\xcf\xd4\x21\x73\xf0\x26\x25\xe3\x77\x6d\x7c\x90\x37\x9e\x71\x11\x8b\xf8\xf5\xc7\xe1\x29\xa7\x77\x94\x7c\xbb\xbc\x26\xa1\x72\x43\x92\xcc\x8e\xdc\x76\xf7\xba\xb3\xd2\x98\x3a\x6c\xca\xb2\x94\x8c\xfd\x66\x87\x59\x9a\x92\x0b\x62\xc3\x8d\xf7\x7c\x72\xe3\x47\x1b\x6e\x7c\x88\x18\x86\x2b\x1e\xa3\x9e\xf3\xf0\xfd\x68\xf4\xd3\x69\xad\x38\x48\x62\xa5\xde\xe9\xa5\x52\xef\x46\x7f\xa2\xde\xd9\x52\xa9\xff\xa4\x0e\x7b\xdf\xa4\xac\x8a\xff\xdb\x7f\x4a\xae\xb6\x72\xe4\xc9\xc8\xc9\xcc\x7e\xb8\xef\xb5\x72\x24\x77\xd6\xa9\xcc\x3c\xd0\x57\x00\x00\x00\xff\xff\xf5\x89\xaa\x2d\x56\x01\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceHelmignore,
		"example/configurd/.workdir/default/hello-service/.helmignore",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceHelmignore() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/.helmignore", size: 342, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x47, 0x51, 0x86, 0xcc, 0xba, 0xa9, 0xa0, 0xa4, 0xde, 0x5e, 0x96, 0xa5, 0xcb, 0x6d, 0xdc, 0xf9, 0xfa, 0xd0, 0xd7, 0x6b, 0xc3, 0x8e, 0x4, 0x47, 0xa, 0xc8, 0x44, 0x45, 0xb2, 0x1a, 0x16}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\x4a\x2c\x28\x80\x73\x95\x0c\xf5\x0c\x94\xb8\x52\x52\x8b\x93\x8b\x32\x0b\x4a\xc0\x42\x8e\x79\x0a\xae\x15\x89\xb9\x05\x39\xa9\x0a\xce\x19\x89\x45\x25\x0a\x69\xf9\x45\x0a\xce\xf9\x79\x69\x99\xe9\xa5\x45\x29\x5c\x79\x89\xb9\xa9\x56\x0a\xa9\x10\x15\x5c\x65\x30\x83\x0c\xf4\x0c\xf5\x0c\xb8\x00\x01\x00\x00\xff\xff\xe2\x6b\xa4\x38\x6a\x00\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceChartYaml,
		"example/configurd/.workdir/default/hello-service/Chart.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceChartYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/Chart.yaml", size: 106, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xa3, 0x89, 0xbd, 0x29, 0xae, 0x35, 0x24, 0x16, 0x67, 0x5b, 0xa1, 0x31, 0xb7, 0x39, 0x9, 0xed, 0xc3, 0xb, 0x17, 0xc1, 0xd0, 0xc9, 0x6e, 0x4, 0xe0, 0x64, 0xea, 0x9, 0x5d, 0xd1, 0x56}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceOverridesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8e\x41\x6e\xc4\x20\x0c\x45\xf7\x9c\xc2\x17\x88\xdc\x65\x85\xd4\x5d\x0f\xd0\x4d\x0f\x60\x31\xbf\x40\x05\x36\xc2\x24\xea\xf1\xab\x4c\x32\xbb\x6f\xeb\xf9\xf9\xcb\xcc\x1e\xc3\x46\xdb\x96\x27\xb0\xaa\xe6\x8f\x82\x82\x50\x35\x4f\xb8\xc7\x40\x54\xcc\xd7\x33\x6c\xa4\xd2\x11\xa9\x59\x92\x76\x6e\x03\x11\xd1\x90\x55\x22\xb1\x63\x1e\x35\xc1\xb9\xa0\x35\x0b\xf7\x78\x9e\x25\xd3\x25\x55\x31\xbf\x6c\xae\x48\xef\x6f\x81\x68\xbc\xe2\x61\x6d\xef\x78\x56\xb8\xe4\xc9\xf4\xa7\xe6\xfb\x6d\x24\xfe\x76\x4c\xe7\x3e\xf0\x2b\x6a\x47\x4d\xfc\x69\x69\xef\xd0\xe5\xfc\xc0\xc1\x17\xbe\xcf\x07\xe3\x4f\xfa\x68\x60\x19\xa3\xd5\x24\xab\x9a\x06\xa2\x6e\xbb\x9e\x9a\x8b\xe3\xf0\x1f\x00\x00\xff\xff\x0d\x6e\xf9\x3c\xf0\x00\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceOverridesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceOverridesYaml,
		"example/configurd/.workdir/default/hello-service/overrides.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceOverridesYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceOverridesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/overrides.yaml", size: 240, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x5c, 0x3f, 0x57, 0x19, 0xc7, 0x8a, 0x2d, 0x14, 0xc5, 0x3f, 0x6a, 0xf2, 0x5e, 0x31, 0x17, 0xe1, 0x76, 0x4c, 0x64, 0x11, 0x45, 0x45, 0xc0, 0x1e, 0xc4, 0xc3, 0x12, 0xfc, 0xcb, 0xe7, 0x91}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x0f\xd1\x40\x9b\xb2\xce\xa1\xd0\xc3\x42\x4e\x69\x0f\xa5\x90\x42\x03\xe9\xb1\xc8\xf6\xa8\x3b\x20\xcb\xae\x46\xda\xee\x92\xe4\xbf\x17\x49\x8e\x77\xb7\xe0\xb2\x7b\x1b\xac\xa7\x37\x6f\xbe\x91\x9f\x9e\x6e\xae\xb1\xe5\x7e\x0d\xa1\x00\xc3\x96\xc2\x7e\xa4\xdb\x3e\x4a\xd0\xed\x86\xd6\xb8\xbe\x79\x79\xa9\x92\xaa\xfa\xbc\x1b\xb5\xeb\x10\x36\x04\xa7\x7b\xc2\x60\x72\xdd\x6e\xb4\x0f\x75\x35\xe9\x56\xe8\xc8\xb0\x23\x28\xda\xe9\x7e\xb4\x54\x27\xad\xc2\xea\x70\xaa\xa3\x0d\xa8\xef\xf2\xb5\xfb\x64\x54\x3f\x6a\x1b\x49\xb2\xf2\xdb\x96\xbc\xe7\x8e\xf0\x8c\xe0\xa3\x6b\xf1\xf1\x43\x2e\xb9\x7f\x88\xc6\xf0\x0e\x6a\x75\x30\x23\xd7\xe5\xba\xe4\xbb\xf3\xa4\x03\x41\xcf\x3d\x4c\xb4\x76\x8f\xdf\x51\x5b\x36\x4c\x1d\xf4\x38\xe6\xe4\x75\xf5\x83\x8a\x7b\xd6\x87\xd4\x23\x4d\x21\x68\xa8\xd5\x51\x08\x32\xf4\x84\xaf\xb1\x21\xef\x28\x90\x94\x79\x0d\x93\xed\x04\xda\x13\x2c\xf7\x1c\xa8\x43\x18\x10\x36\x2c\x78\xdb\xec\x33\x8b\x4f\xf7\x0f\x49\xcb\xee\x17\x64\xa4\xf6\x5d\x5d\x7d\x31\xf0\x64\x49\xcb\x04\xad\x1d\x5c\xd0\xec\xa4\x60\x2b\xdf\x38\xe0\x0f\x5b\x8b\x86\x10\x25\xe5\x14\xe8\x1c\x7e\x4a\xbb\x88\x36\x69\x4e\xf1\xb2\x99\x69\xbe\x1e\xce\x44\x5f\x35\x8b\x82\xb3\x90\x5b\x39\x38\xbd\xc9\xf1\xd7\xb7\xe7\x6f\xf5\x28\xe7\x4c\xa2\xb8\xd4\xdf\x0b\xa6\x72\x79\xce\x7a\xf2\xf5\xe2\x80\xa3\x67\x17\x0c\xd4\x95\xac\xae\x44\xfd\xe3\x56\xfa\x5e\xf2\xce\x96\xea\x93\xf7\x77\xb4\xd8\xf4\xbb\x6c\xc9\x0b\x0f\x2e\x2d\x35\x2f\x77\x7a\x29\x45\x65\x75\x43\xf6\x3f\x0b\xce\x2a\xb5\x38\xce\x31\xed\x52\x3f\x4e\xdd\x9e\xe1\x69\xb4\xba\x25\xa8\xf7\x0a\xea\xa7\xba\x68\xce\xbf\x01\x00\x00\xff\xff\xef\x62\xa1\x95\x15\x04\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTpl,
		"example/configurd/.workdir/default/hello-service/templates/_helpers.tpl",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTpl() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/templates/_helpers.tpl", size: 1045, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xb0, 0x6b, 0xd, 0x90, 0x89, 0xbb, 0x4, 0xfd, 0x26, 0xc5, 0x68, 0x60, 0x4d, 0x6a, 0x5a, 0x23, 0x70, 0x2a, 0x48, 0x23, 0x9c, 0x1d, 0x71, 0x42, 0xb, 0x6, 0x3, 0x65, 0xfb, 0xea, 0x3f}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\xbd\xdb\x45\x77\x1a\x7c\xed\x8e\xdb\x60\xb4\x43\x81\x1d\x19\x99\xb5\x85\x4a\xa2\x20\xd1\x1e\x82\x2c\xff\x7d\x50\xec\xb8\x52\x9c\x8f\x2e\xa8\x6f\xa6\x1e\xf9\x9e\x1e\x45\x82\x53\x2f\xe8\x83\x22\x5b\x09\x70\x2e\xdc\x0f\x0f\xab\x37\x65\x9b\x4a\x7c\x43\xa7\x69\x63\xd0\xf2\xca\x20\x43\x03\x0c\xd5\x4a\x08\x0b\x06\x2b\x71\xb7\xdd\x8a\xf2\x09\x35\x42\xc0\xf2\x27\x18\x14\xbb\xdd\xdd\x4a\x08\x0d\x6b\xd4\x21\xe2\x44\x2c\x57\xbe\xf5\x6b\xf4\x16\x19\x43\xa9\xe8\x7e\xcc\x3d\x91\x7a\x06\xef\xc0\x73\x41\xaf\x63\xca\x0b\xe8\x1e\x43\xd9\x7a\xea\xdd\xf9\x14\x03\x16\x5a\x6c\x8a\xf5\x26\x27\x7a\x46\x3f\x28\x39\x73\x75\xa8\x4d\x19\xba\x7b\xd9\x81\xe7\xd3\xd7\x29\xd2\xd8\x13\x0e\x2a\x9a\xb4\xbf\x66\x70\x28\xe3\x15\x3d\x3a\xad\x24\x84\x4c\xdf\x14\x7c\xa4\xde\xf2\xc8\x16\x50\xa3\x64\xf2\xa3\x2b\x06\x58\x76\xdf\x13\x9b\xfe\xdf\xa8\x1b\xac\x62\x34\x4e\x03\xe3\xa4\x21\xe9\x67\xfc\x74\x26\xe7\x16\x41\x37\x75\xef\xe0\x63\xfc\x24\x59\x06\x65\xd1\x27\x32\x0a\x71\x9d\x56\x08\x65\xa0\x3d\xbc\xc8\x89\x65\x1f\x8a\x9d\xa0\xa0\x98\xfc\x46\xec\x76\xd5\xe2\x98\xa1\x9d\x1e\x6d\x56\xa9\xee\xb5\xae\x49\x2b\xb9\xc9\x84\x8f\x39\x6e\x3e\xcc\x35\x6c\xb7\x85\xf8\xa3\xb8\x9b\xe1\xe0\xdb\x90\x43\x62\xa4\x4a\xfe\xc7\x24\xa6\xdf\x60\xb4\x28\xc5\x5f\x61\x95\x6d\xd0\xb2\x78\xf8\xb2\xac\x8d\xb6\xb9\x42\x88\x76\xc8\x11\x68\x87\xcf\xa3\x73\xe4\xf9\x48\xfd\xa1\x39\x73\xe3\x8a\x08\xca\x20\x49\x57\x6b\x8a\x63\x96\xf8\x19\xc6\x79\x2c\x33\x44\x4e\xba\x27\xf6\xc4\x24\x49\x57\xe2\xd7\x63\x9d\x9c\x69\x35\xa0\xc5\x10\x6a\x4f\x6b\xcc\x85\xb1\x74\xcf\x24\xdf\x90\xab\xe3\x5a\x7b\x0d\x67\xf5\x7a\x84\x46\x7d\x7a\xcd\x40\xbd\x97\x78\xa1\xf3\xf3\xda\x98\x90\x17\x5a\x33\x90\xee\x0d\xfe\x88\x9b\xe5\x44\x41\x0f\xb6\xc5\xb9\xde\x88\x0d\xc7\x8e\xa6\x23\x65\x17\xa3\x14\x3f\x13\xcb\xd7\xc0\xdd\x08\x32\xef\x7b\x2c\xa7\xcb\xde\xc8\xc4\xf6\x2e\xea\x43\x82\x2e\x8b\xe9\x28\x8c\x3a\x32\x6a\x37\x2b\x8b\xe7\x69\xc6\x42\xd4\x62\x46\x2c\x35\xf8\x3c\x2d\xe3\x77\x58\x1a\xcd\x2f\x70\x62\x5a\xbe\xe6\xe5\x13\xbe\xe5\x0a\x78\x7d\x55\x56\x71\xb2\x29\x0e\x91\x8f\xb3\x5c\xe3\x60\xd2\xe8\x81\x15\xd9\xc4\xd8\x24\x78\x13\xd3\xbf\x00\x00\x00\xff\xff\x63\x3e\x7e\x07\x13\x08\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYaml,
		"example/configurd/.workdir/default/hello-service/templates/deployment.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/templates/deployment.yaml", size: 2067, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x7c, 0x90, 0x45, 0x2b, 0xdb, 0xfe, 0xca, 0x5e, 0x58, 0xcd, 0xb4, 0x65, 0xda, 0x10, 0xec, 0xd0, 0x1a, 0xbc, 0xf4, 0xf2, 0x33, 0xe1, 0xe3, 0x19, 0xe8, 0xd0, 0x37, 0xbd, 0x27, 0x5b, 0xfc}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x8e\x9c\x30\x0c\xbd\xf3\x15\xd6\xaa\x57\x32\x5a\xa9\xa7\x48\xfd\x80\x5e\xaa\x6a\x2b\xad\xd4\xa3\x01\xef\x10\x0d\x38\x51\xe2\x99\xb6\xa2\xfc\x7b\x65\x02\x03\x74\x07\x69\x39\xc5\xe6\x3d\xc7\xef\x39\x1e\x86\x12\xdc\x1b\x98\x57\xec\xae\x94\x8c\xe3\x73\xa4\x94\x4c\xeb\x93\x24\x18\xc7\x62\x18\xe0\x53\xa2\x78\x73\x35\x7d\xc3\x9e\xc0\x7e\x01\xf3\x42\x1d\x61\x22\x33\x25\xf6\x98\xef\x3e\xca\x84\x99\xeb\xcd\x69\x53\x7b\x16\x74\x4c\x71\x02\x8c\x63\x81\xc1\xbd\x52\x4c\xce\xb3\x05\xfa\x2d\xc4\x7a\x4c\xa7\xdb\x73\x45\x82\xcf\xc5\xc5\x71\x63\xe1\x6b\xee\xa6\xe8\x49\xb0\x41\x41\x5b\x00\x30\xf6\x64\xe1\x69\x18\xde\xf5\x51\xce\xcd\x3f\x15\x00\x1d\x56\xd4\x25\xc5\x03\x60\x08\xe6\x72\xad\x28\x32\x89\x4a\xf4\xa7\x5c\xe3\x41\x89\x03\x7c\xc0\x28\xa5\x7f\xcb\x94\x59\xd9\x39\xfa\x6b\x38\xa6\xf4\xc8\x78\xa6\xa6\xac\xfe\xec\x2f\xfa\x91\x0d\x59\x88\x2d\x75\xbd\x49\xed\xa9\x6e\x31\xca\x81\xac\x6d\xee\x85\x6e\x4e\x9d\x82\x71\x54\x99\x3a\xbd\x5f\x4e\xda\x77\xf3\x43\x66\x2f\x28\xea\x69\xbe\x6a\x93\xc8\xae\x28\x55\xfc\x4f\xec\x3b\x30\xf0\x17\xd8\x71\x43\x2c\xf0\x39\xc3\xf5\x2f\x71\xa3\x41\x0a\x54\xdb\xe2\xe0\x9d\x24\xaa\x23\xc9\xea\x9e\x2c\xa6\x97\x30\x3d\xa1\x1c\x68\x3d\x88\xc8\x67\x3a\x7e\x68\x19\x57\x4e\x66\xf1\x66\x1a\x13\x77\x6e\x25\xc7\xeb\x9d\xbb\x81\x3c\x6e\x69\x23\x04\x20\x5e\x3b\xba\xcb\xff\x48\x43\x59\x85\x7d\xd0\x54\x2b\x12\x16\x71\x00\x01\xa5\x4d\x6b\xa8\x44\x4d\x65\xa2\x9e\x56\x62\xfe\x2a\xac\x2f\xc4\x8d\xdd\x25\x55\xda\x7d\xd3\x26\xee\x6e\xf5\xfe\x2b\x71\x47\xeb\x4a\xed\xd0\xcb\x8e\xed\xcd\xdb\x38\xf1\x2f\x00\x00\xff\xff\x92\x2e\xed\x05\xf5\x03\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYaml,
		"example/configurd/.workdir/default/hello-service/templates/ingress.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/templates/ingress.yaml", size: 1013, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x31, 0x0, 0x8e, 0x36, 0x83, 0xf4, 0xd6, 0x53, 0x7f, 0xeb, 0x15, 0x1a, 0x46, 0x69, 0xdf, 0x4d, 0x9e, 0x8b, 0xaf, 0x3c, 0x72, 0xc8, 0x5a, 0xf0, 0xd0, 0xec, 0xbe, 0x6d, 0xc9, 0x1b, 0x85}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\x23\xbb\x15\xba\x6a\xed\x5e\x42\x5a\xb2\x9f\xe5\xaf\xb1\x88\x2c\x89\xd3\xd9\x10\x82\xff\x7b\x71\x9d\x40\x03\x6e\x87\x8e\x92\xde\x43\xf7\x8e\x4b\x38\x41\x6a\xc8\xc9\xd1\xf4\x62\x2e\x21\x75\x8e\xde\x21\x53\xf0\x30\x03\x94\x3b\x56\x76\x86\x28\xf1\x00\x47\xb7\x1b\xd9\x23\x22\xb8\xc2\xbe\xf1\x00\x9a\x67\x43\x14\xb9\x45\xac\x0b\x45\xc4\xa5\xd8\xcb\xd8\x42\x12\x14\xd5\x86\xbc\xff\xcb\xdc\xe2\x0b\x8b\x36\xf9\x73\x55\x4e\x1c\x47\x54\x7b\x96\x3c\x96\xdf\x95\x81\x13\x9f\xd1\x35\xed\xf5\xf9\xa3\x7b\xc8\x43\xec\x11\x07\x5b\xfb\xbd\xef\x59\xd4\xd1\x6e\x63\xa6\xe6\xe7\xdd\x11\x53\x58\x56\x43\xf3\xbc\x33\xb5\xc0\x2f\x89\x15\x11\x5e\xb3\xfc\x27\x57\xaf\x05\x4f\x5d\x75\x1d\xd0\x2e\x0f\x2b\x52\xb2\xe8\x7d\x95\xcd\xf7\x61\x93\xf7\x39\x29\x87\x04\x39\x64\xd1\x47\x1e\x51\x91\xac\xd9\xe7\xe8\xe8\xe3\xf5\x60\xbe\x02\x00\x00\xff\xff\x0a\x95\xdd\xf0\xdc\x01\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYaml,
		"example/configurd/.workdir/default/hello-service/templates/service.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/templates/service.yaml", size: 476, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x70, 0xb2, 0x74, 0x71, 0x52, 0xcc, 0xad, 0xa6, 0x9e, 0x51, 0x10, 0x25, 0xdc, 0xaf, 0xc, 0x29, 0xa3, 0x19, 0x3c, 0xdd, 0x9f, 0x10, 0x47, 0xd1, 0xa2, 0x86, 0x6d, 0x4f, 0xb9, 0x21, 0x97}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\x91\x4b\x4f\x71\xd9\xd5\x0f\x51\xca\x06\xbd\x94\x1d\x14\x47\x4b\x4c\x6d\x39\x58\x4a\xd7\x52\xf2\xee\xc3\x69\xc6\x36\xd6\xb1\xeb\x2f\x7d\xbf\xf4\x4b\x38\xfa\x03\x65\xf1\x89\x2d\x9c\x9f\xaa\x93\xe7\xce\xc2\x3e\x75\x55\x24\xc5\x0e\x15\x6d\x05\xc0\x18\xc9\x42\x7d\xbb\x81\x67\x17\xa6\x8e\xa0\xa6\x0b\xc6\x31\x90\x79\x9b\x42\x28\xe5\x1a\x0c\xcc\x73\xa3\x24\xda\xb8\xc4\x4c\x4e\x7d\xe2\xba\x02\x08\xd8\x52\x90\x62\x03\x80\xe3\x68\x4e\x53\x4b\x99\x49\x49\x8c\x4f\xdb\xbb\xf5\x23\xe7\x2f\xd7\x05\x1d\x28\x44\x23\xc3\xd6\x0d\x98\xf5\x31\xb1\x94\xbe\x21\xbf\xa7\x79\x16\x45\x76\xf7\x89\xe6\x99\x02\xa1\x90\xd9\x61\xa4\xbf\x99\x88\x8c\x3d\x75\x4d\x7b\xfd\x49\xbd\x50\x3e\x7b\xb7\x82\xc8\x9c\x14\x4b\xe4\x35\x69\xfd\xb9\xef\x90\xd2\xa9\xb6\xb0\x1c\x46\x26\xe7\x48\xa4\x92\x91\x5c\x69\x73\x89\x15\x3d\x53\x5e\xa1\x66\xbd\xf4\x7b\x4f\xba\x08\x00\x3e\x62\x4f\x16\xda\x49\xae\x6d\xba\xac\xa2\x4b\x31\x62\x79\xd4\x71\x53\x5a\x37\xaf\xab\x8e\xb9\x17\x0b\x70\xdc\xfc\xff\x29\x5b\xa2\x1c\x30\x4c\x24\x46\xee\x49\xcc\x98\xb2\xc2\x3c\x2f\x76\x99\x44\x31\xeb\x3e\x05\xef\xae\x16\x76\x74\xa6\x5c\x7d\x04\x00\x00\xff\xff\xc5\xf1\x40\xab\x2d\x02\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYaml,
		"example/configurd/.workdir/default/hello-service/templates/tests/test-connection.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/templates/tests/test-connection.yaml", size: 557, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x1e, 0x76, 0x8c, 0xa3, 0xb5, 0xf5, 0xe1, 0x31, 0x77, 0x28, 0xd9, 0x4c, 0x67, 0xce, 0x75, 0x37, 0x1c, 0x5c, 0xb8, 0xc3, 0xbc, 0x22, 0x1c, 0x4, 0xa, 0x5d, 0xab, 0xfb, 0xdd, 0x92, 0x7e}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHelloServiceValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdc\x46\x0c\xbd\xcf\xaf\x20\xd6\x87\x5c\xec\xad\x9d\x5e\x02\x01\x39\x18\x4e\x5b\x18\xb0\x9d\x45\xd7\x45\x51\x04\x39\x70\x47\x94\x34\xed\x68\xa8\x92\x9c\x75\x84\xa2\xff\xbd\x98\x91\xfc\xd1\x38\x87\x9c\x76\x76\xf4\xc8\x79\x7c\x7c\xe4\x09\x7c\xa0\x0e\x73\x34\x38\x62\xcc\xa4\xd0\xb1\x80\x91\xda\xd6\x9d\xc0\xfd\x10\x14\x82\x02\xc2\x1f\x97\xb7\x37\x67\x1d\xcb\x88\x66\xd4\x42\x17\x22\x15\xc0\x07\xf2\x11\x85\xe0\x88\x12\xf0\x10\x49\xc1\x18\x0e\x04\x13\xaa\x52\x0b\x21\x19\xc3\xcc\xb9\x64\x1c\xa7\x88\x46\xba\x75\x4e\x68\x8a\xc1\xe3\x15\xe7\x64\x0d\x5c\x38\x17\x46\xec\xa9\x71\x00\x42\x13\x6b\x30\x96\xb9\x81\xd4\x87\xf4\xc5\x01\x18\xf6\x0d\xd4\x50\x73\x00\x53\x8e\x71\xc7\x31\xf8\xb9\x81\xeb\xee\x8e\x6d\x27\xa4\x94\x6c\x4d\xb2\xcb\x31\xee\xc9\x0b\x99\x36\xf0\xe9\xb3\x4b\x38\xd2\xc7\x23\x89\x84\x96\x1a\xd8\x6c\x5c\x97\x63\x7c\x75\xe9\x94\xe4\x18\x3c\x5d\x7a\x5f\x39\x39\x80\x13\xd8\x4f\xe4\x43\x17\x48\xe1\x61\x20\x1b\x48\x00\x61\xc5\x01\x2e\x40\xd0\x81\x73\x6c\x4b\xc1\x5e\x08\x8d\x5a\x07\xeb\xa9\x01\x93\x4c\x35\xd1\x65\x4a\x6c\x68\x81\x53\x55\x07\xdb\xb6\xfc\xd8\x40\x5f\xa7\x73\x00\xf8\x8c\x6d\xe0\x9f\x7f\x6b\xfc\xfd\x40\x50\x28\x03\x77\xdf\x8a\x2a\xc9\xb2\xd2\xb6\x62\xaf\x3b\x48\x6c\xa0\x64\x80\xa9\x5d\xb9\x94\x0e\x16\x36\xa7\x80\x4b\xa2\xa0\xd0\x53\x22\x29\x8c\x21\x6b\x48\x7d\x4d\xfc\xa8\xcd\x53\xb3\x1c\x54\x7c\xe3\xdc\xc4\xed\x9e\x7c\x96\x60\xf3\x15\x27\xa3\x2f\xf6\x44\xaf\xd3\x5f\x84\xf3\xd4\xc0\xdb\xf3\xf3\xf3\x22\xe5\xb7\x61\x1e\x27\x3c\x84\x18\x2c\x90\x2e\x02\x03\xb4\xc2\xd3\xe3\xf9\x0c\x2e\x6f\x6e\xea\x59\x08\xdb\x8f\x29\xce\xbf\x32\xdb\xcf\x21\x92\xce\x6a\x34\xbe\x10\x54\x72\xba\xd4\x3b\x4e\x05\xf0\xf5\xf5\x6f\x4a\xd2\xc0\xc5\x4a\xa5\x0a\x55\x5e\xb0\x79\xa2\x06\xae\x62\x56\x23\xb9\xde\x15\x23\xb1\x58\x03\xef\xce\x4b\xc7\x38\x19\x86\x44\xb2\xab\x77\x3f\xd6\xe0\x7e\x29\xaa\xda\xce\x51\x3a\x56\x3b\x95\x67\xce\x16\x4d\xe0\xfe\xa7\xfd\xfd\xca\xbd\x4e\x4e\x03\x9b\x02\xde\x38\x87\xd2\xeb\x0b\xf8\x06\xa5\xbf\x78\xff\x9e\x13\x6d\x9c\x73\x21\xf5\x42\x5a\x25\x78\xdd\xec\x12\xf0\x57\x3e\x90\x24\x2a\xa3\x12\xf8\x87\x15\xbe\xf5\x11\x55\x9f\x87\xe2\x35\xd0\xa2\x9e\xa1\x1f\x2b\x0d\xc9\xb4\x71\x00\x03\xab\x55\x7f\x03\x4c\x68\xc3\x7a\xd4\x3a\x1e\x77\xb5\x86\xe2\x7d\x21\xe5\x2c\x9e\x9e\x0d\xf7\x3b\x41\xd6\x8c\x31\xce\x20\xe4\x79\x1c\x29\xb5\xd5\x56\xc6\xa0\x75\x2a\x66\x68\xd7\xa5\xf1\x14\x5d\xfd\x66\x0c\x91\xf0\x48\x60\x65\x71\x60\x59\x1c\x9e\x93\xfa\xc0\x59\x17\x17\x0c\x5c\xac\x5b\x77\xcc\x50\x9e\x21\xd9\x2e\x5b\x06\xa3\x32\x84\x54\x1c\xab\xa4\xe0\x07\x4c\x7e\xf9\x15\xd3\xd2\x5b\xe0\x04\x94\x8e\x41\x38\x8d\x94\x4c\xe1\x21\xd8\x00\x31\x98\xc5\xb5\xff\x8f\x54\x4e\x41\xb3\x1f\xca\xf3\xb7\x21\x85\x22\xd3\xb6\x0c\xc6\xcc\x19\x5a\x86\x07\x4c\xff\xab\xe4\x45\x58\x4e\x4b\xb5\xb6\x8c\x03\xc7\xc8\x0f\x21\xf5\x35\x7b\x0c\xa9\x40\xb0\xfd\x33\x6b\xfd\x3e\x96\x07\x12\x79\x52\x45\x99\x4f\x6b\xfd\x42\x23\xd7\xea\x09\x7c\x96\x38\xc3\x41\xb0\x6a\xd3\x19\x09\xbc\x79\x96\xfa\xcd\x76\x4d\x3a\x06\x7b\x1a\x07\x3f\xe5\x6a\xdd\x71\xfd\x3f\xd2\x58\x37\xe1\xc5\xdb\x77\xb7\x61\x2d\xf1\xef\x4c\xfa\xbd\x11\x2e\x71\x4b\x7b\x8a\xe4\x8d\xa5\x76\xd7\x19\xc7\x32\xf6\x8b\xe5\x3e\x7d\x76\x0e\xbb\x2e\xa4\x60\x73\xfd\xfc\x5f\x00\x00\x00\xff\xff\x79\x8e\x4d\x92\x0c\x06\x00\x00")

func exampleConfigurdWorkdirDefaultHelloServiceValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHelloServiceValuesYaml,
		"example/configurd/.workdir/default/hello-service/values.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHelloServiceValuesYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHelloServiceValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hello-service/values.yaml", size: 1548, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x9b, 0x91, 0x2, 0x3c, 0x74, 0x44, 0xf5, 0x30, 0x13, 0xc4, 0xac, 0xbe, 0x6a, 0xf9, 0xa5, 0xab, 0xb2, 0x96, 0x82, 0xd1, 0x42, 0x45, 0x73, 0x83, 0x21, 0xd6, 0xa1, 0x33, 0x5d, 0xb2, 0xcc}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\xc7\x36\x96\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\xdc\xb2\xc2\x0a\x24\xe4\xd2\x18\x97\xc8\x19\xe3\x2a\x69\x96\x1c\x50\xfd\x74\xf2\x81\xd5\x51\x87\x97\x28\x0a\x5d\x6b\x2d\xcd\x14\x1a\x39\x25\x84\x54\x46\x2c\xde\xa6\x28\x39\xfc\x45\xe3\xe4\x4d\xce\x8c\xea\x2d\xfe\xf0\x3e\xcf\xd4\x21\x73\xf0\x26\x25\xe3\x77\x6d\x7c\x90\x37\x9e\x71\x11\x8b\xf8\xf5\xc7\xe1\x29\xa7\x77\x94\x7c\xbb\xbc\x26\xa1\x72\x43\x92\xcc\x8e\xdc\x76\xf7\xba\xb3\xd2\x98\x3a\x6c\xca\xb2\x94\x8c\xfd\x66\x87\x59\x9a\x92\x0b\x62\xc3\x8d\xf7\x7c\x72\xe3\x47\x1b\x6e\x7c\x88\x18\x86\x2b\x1e\xa3\x9e\xf3\xf0\xfd\x68\xf4\xd3\x69\xad\x38\x48\x62\xa5\xde\xe9\xa5\x52\xef\x46\x7f\xa2\xde\xd9\x52\xa9\xff\xa4\x0e\x7b\xdf\xa4\xac\x8a\xff\xdb\x7f\x4a\xae\xb6\x72\xe4\xc9\xc8\xc9\xcc\x7e\xb8\xef\xb5\x72\x24\x77\xd6\xa9\xcc\x3c\xd0\x57\x00\x00\x00\xff\xff\xf5\x89\xaa\x2d\x56\x01\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceHelmignore,
		"example/configurd/.workdir/default/hi-service/.helmignore",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceHelmignore() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/.helmignore", size: 342, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x47, 0x51, 0x86, 0xcc, 0xba, 0xa9, 0xa0, 0xa4, 0xde, 0x5e, 0x96, 0xa5, 0xcb, 0x6d, 0xdc, 0xf9, 0xfa, 0xd0, 0xd7, 0x6b, 0xc3, 0x8e, 0x4, 0x47, 0xa, 0xc8, 0x44, 0x45, 0xb2, 0x1a, 0x16}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\x4a\x2c\x28\x80\x73\x95\x0c\xf5\x0c\x94\xb8\x52\x52\x8b\x93\x8b\x32\x0b\x4a\xc0\x42\x8e\x79\x0a\xae\x15\x89\xb9\x05\x39\xa9\x0a\xce\x19\x89\x45\x25\x0a\x69\xf9\x45\x0a\xce\xf9\x79\x69\x99\xe9\xa5\x45\x29\x5c\x79\x89\xb9\xa9\x56\x0a\xa9\x10\x15\x5c\x65\x30\x83\x0c\xf4\x0c\xf5\x0c\xb8\x00\x01\x00\x00\xff\xff\xe2\x6b\xa4\x38\x6a\x00\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceChartYaml,
		"example/configurd/.workdir/default/hi-service/Chart.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceChartYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/Chart.yaml", size: 106, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xa3, 0x89, 0xbd, 0x29, 0xae, 0x35, 0x24, 0x16, 0x67, 0x5b, 0xa1, 0x31, 0xb7, 0x39, 0x9, 0xed, 0xc3, 0xb, 0x17, 0xc1, 0xd0, 0xc9, 0x6e, 0x4, 0xe0, 0x64, 0xea, 0x9, 0x5d, 0xd1, 0x56}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceOverridesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcb\x41\x0a\x02\x31\x0c\x46\xe1\x7d\x4e\xf1\x5f\xa0\x8c\x4b\x09\x78\x07\xaf\x10\x4a\x68\x03\x63\x3a\x24\xc1\xf3\x4b\x45\x77\x1f\x0f\x9e\xc4\x48\xa6\x86\xd6\x46\xa8\x96\xf9\x78\x4c\x31\x32\x1f\xa1\x99\x4c\xc0\x5c\x59\x5f\x34\xb8\xbc\x94\x71\xae\x2e\xe7\xae\x04\x00\x97\xd4\x64\x1c\xa9\xf1\xb6\xae\x79\x4c\xa3\x9f\xf7\xd3\x97\x97\x98\x6b\x3c\x57\x14\xe3\x7e\x23\xe0\xfa\xf3\x13\x00\x00\xff\xff\xf7\x83\x98\x2f\x7c\x00\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceOverridesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceOverridesYaml,
		"example/configurd/.workdir/default/hi-service/overrides.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceOverridesYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceOverridesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/overrides.yaml", size: 124, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xc6, 0x9, 0x15, 0x78, 0x27, 0x63, 0x3, 0x7a, 0x74, 0x1d, 0x3b, 0xb2, 0xd3, 0x51, 0x7, 0xe7, 0x82, 0x3f, 0xda, 0x18, 0x66, 0x96, 0x66, 0xf0, 0x1f, 0x13, 0x8, 0x64, 0xf1, 0x9d, 0x44}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x0f\xd1\x40\x9b\xb2\xce\xa1\xd0\xc3\x42\x4e\x69\x0f\xa5\x90\x42\x03\xe9\xb1\xc8\xf6\xa8\x3b\x20\xcb\xae\x46\xda\xee\x92\xe4\xbf\x17\x49\x8e\x77\xb7\xe0\xb2\x7b\x1b\xac\xa7\x37\x6f\xbe\x91\x9f\x9e\x6e\xae\xb1\xe5\x7e\x0d\xa1\x00\xc3\x96\xc2\x7e\xa4\xdb\x3e\x4a\xd0\xed\x86\xd6\xb8\xbe\x79\x79\xa9\x92\xaa\xfa\xbc\x1b\xb5\xeb\x10\x36\x04\xa7\x7b\xc2\x60\x72\xdd\x6e\xb4\x0f\x75\x35\xe9\x56\xe8\xc8\xb0\x23\x28\xda\xe9\x7e\xb4\x54\x27\xad\xc2\xea\x70\xaa\xa3\x0d\xa8\xef\xf2\xb5\xfb\x64\x54\x3f\x6a\x1b\x49\xb2\xf2\xdb\x96\xbc\xe7\x8e\xf0\x8c\xe0\xa3\x6b\xf1\xf1\x43\x2e\xb9\x7f\x88\xc6\xf0\x0e\x6a\x75\x30\x23\xd7\xe5\xba\xe4\xbb\xf3\xa4\x03\x41\xcf\x3d\x4c\xb4\x76\x8f\xdf\x51\x5b\x36\x4c\x1d\xf4\x38\xe6\xe4\x75\xf5\x83\x8a\x7b\xd6\x87\xd4\x23\x4d\x21\x68\xa8\xd5\x51\x08\x32\xf4\x84\xaf\xb1\x21\xef\x28\x90\x94\x79\x0d\x93\xed\x04\xda\x13\x2c\xf7\x1c\xa8\x43\x18\x10\x36\x2c\x78\xdb\xec\x33\x8b\x4f\xf7\x0f\x49\xcb\xee\x17\x64\xa4\xf6\x5d\x5d\x7d\x31\xf0\x64\x49\xcb\x04\xad\x1d\x5c\xd0\xec\xa4\x60\x2b\xdf\x38\xe0\x0f\x5b\x8b\x86\x10\x25\xe5\x14\xe8\x1c\x7e\x4a\xbb\x88\x36\x69\x4e\xf1\xb2\x99\x69\xbe\x1e\xce\x44\x5f\x35\x8b\x82\xb3\x90\x5b\x39\x38\xbd\xc9\xf1\xd7\xb7\xe7\x6f\xf5\x28\xe7\x4c\xa2\xb8\xd4\xdf\x0b\xa6\x72\x79\xce\x7a\xf2\xf5\xe2\x80\xa3\x67\x17\x0c\xd4\x95\xac\xae\x44\xfd\xe3\x56\xfa\x5e\xf2\xce\x96\xea\x93\xf7\x77\xb4\xd8\xf4\xbb\x6c\xc9\x0b\x0f\x2e\x2d\x35\x2f\x77\x7a\x29\x45\x65\x75\x43\xf6\x3f\x0b\xce\x2a\xb5\x38\xce\x31\xed\x52\x3f\x4e\xdd\x9e\xe1\x69\xb4\xba\x25\xa8\xf7\x0a\xea\xa7\xba\x68\xce\xbf\x01\x00\x00\xff\xff\xef\x62\xa1\x95\x15\x04\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTpl,
		"example/configurd/.workdir/default/hi-service/templates/_helpers.tpl",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTpl() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/templates/_helpers.tpl", size: 1045, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xb0, 0x6b, 0xd, 0x90, 0x89, 0xbb, 0x4, 0xfd, 0x26, 0xc5, 0x68, 0x60, 0x4d, 0x6a, 0x5a, 0x23, 0x70, 0x2a, 0x48, 0x23, 0x9c, 0x1d, 0x71, 0x42, 0xb, 0x6, 0x3, 0x65, 0xfb, 0xea, 0x3f}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\xbd\xdb\x45\x77\x1a\x7c\xed\x8e\xdb\x60\xb4\x43\x81\x1d\x19\x99\xb5\x85\x4a\xa2\x20\xd1\x1e\x82\x2c\xff\x7d\x50\xec\xb8\x52\x9c\x8f\x2e\xa8\x6f\xa6\x1e\xf9\x9e\x1e\x45\x82\x53\x2f\xe8\x83\x22\x5b\x09\x70\x2e\xdc\x0f\x0f\xab\x37\x65\x9b\x4a\x7c\x43\xa7\x69\x63\xd0\xf2\xca\x20\x43\x03\x0c\xd5\x4a\x08\x0b\x06\x2b\x71\xb7\xdd\x8a\xf2\x09\x35\x42\xc0\xf2\x27\x18\x14\xbb\xdd\xdd\x4a\x08\x0d\x6b\xd4\x21\xe2\x44\x2c\x57\xbe\xf5\x6b\xf4\x16\x19\x43\xa9\xe8\x7e\xcc\x3d\x91\x7a\x06\xef\xc0\x73\x41\xaf\x63\xca\x0b\xe8\x1e\x43\xd9\x7a\xea\xdd\xf9\x14\x03\x16\x5a\x6c\x8a\xf5\x26\x27\x7a\x46\x3f\x28\x39\x73\x75\xa8\x4d\x19\xba\x7b\xd9\x81\xe7\xd3\xd7\x29\xd2\xd8\x13\x0e\x2a\x9a\xb4\xbf\x66\x70\x28\xe3\x15\x3d\x3a\xad\x24\x84\x4c\xdf\x14\x7c\xa4\xde\xf2\xc8\x16\x50\xa3\x64\xf2\xa3\x2b\x06\x58\x76\xdf\x13\x9b\xfe\xdf\xa8\x1b\xac\x62\x34\x4e\x03\xe3\xa4\x21\xe9\x67\xfc\x74\x26\xe7\x16\x41\x37\x75\xef\xe0\x63\xfc\x24\x59\x06\x65\xd1\x27\x32\x0a\x71\x9d\x56\x08\x65\xa0\x3d\xbc\xc8\x89\x65\x1f\x8a\x9d\xa0\xa0\x98\xfc\x46\xec\x76\xd5\xe2\x98\xa1\x9d\x1e\x6d\x56\xa9\xee\xb5\xae\x49\x2b\xb9\xc9\x84\x8f\x39\x6e\x3e\xcc\x35\x6c\xb7\x85\xf8\xa3\xb8\x9b\xe1\xe0\xdb\x90\x43\x62\xa4\x4a\xfe\xc7\x24\xa6\xdf\x60\xb4\x28\xc5\x5f\x61\x95\x6d\xd0\xb2\x78\xf8\xb2\xac\x8d\xb6\xb9\x42\x88\x76\xc8\x11\x68\x87\xcf\xa3\x73\xe4\xf9\x48\xfd\xa1\x39\x73\xe3\x8a\x08\xca\x20\x49\x57\x6b\x8a\x63\x96\xf8\x19\xc6\x79\x2c\x33\x44\x4e\xba\x27\xf6\xc4\x24\x49\x57\xe2\xd7\x63\x9d\x9c\x69\x35\xa0\xc5\x10\x6a\x4f\x6b\xcc\x85\xb1\x74\xcf\x24\xdf\x90\xab\xe3\x5a\x7b\x0d\x67\xf5\x7a\x84\x46\x7d\x7a\xcd\x40\xbd\x97\x78\xa1\xf3\xf3\xda\x98\x90\x17\x5a\x33\x90\xee\x0d\xfe\x88\x9b\xe5\x44\x41\x0f\xb6\xc5\xb9\xde\x88\x0d\xc7\x8e\xa6\x23\x65\x17\xa3\x14\x3f\x13\xcb\xd7\xc0\xdd\x08\x32\xef\x7b\x2c\xa7\xcb\xde\xc8\xc4\xf6\x2e\xea\x43\x82\x2e\x8b\xe9\x28\x8c\x3a\x32\x6a\x37\x2b\x8b\xe7\x69\xc6\x42\xd4\x62\x46\x2c\x35\xf8\x3c\x2d\xe3\x77\x58\x1a\xcd\x2f\x70\x62\x5a\xbe\xe6\xe5\x13\xbe\xe5\x0a\x78\x7d\x55\x56\x71\xb2\x29\x0e\x91\x8f\xb3\x5c\xe3\x60\xd2\xe8\x81\x15\xd9\xc4\xd8\x24\x78\x13\xd3\xbf\x00\x00\x00\xff\xff\x63\x3e\x7e\x07\x13\x08\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYaml,
		"example/configurd/.workdir/default/hi-service/templates/deployment.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/templates/deployment.yaml", size: 2067, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x7c, 0x90, 0x45, 0x2b, 0xdb, 0xfe, 0xca, 0x5e, 0x58, 0xcd, 0xb4, 0x65, 0xda, 0x10, 0xec, 0xd0, 0x1a, 0xbc, 0xf4, 0xf2, 0x33, 0xe1, 0xe3, 0x19, 0xe8, 0xd0, 0x37, 0xbd, 0x27, 0x5b, 0xfc}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x8e\x9c\x30\x0c\xbd\xf3\x15\xd6\xaa\x57\x32\x5a\xa9\xa7\x48\xfd\x80\x5e\xaa\x6a\x2b\xad\xd4\xa3\x01\xef\x10\x0d\x38\x51\xe2\x99\xb6\xa2\xfc\x7b\x65\x02\x03\x74\x07\x69\x39\xc5\xe6\x3d\xc7\xef\x39\x1e\x86\x12\xdc\x1b\x98\x57\xec\xae\x94\x8c\xe3\x73\xa4\x94\x4c\xeb\x93\x24\x18\xc7\x62\x18\xe0\x53\xa2\x78\x73\x35\x7d\xc3\x9e\xc0\x7e\x01\xf3\x42\x1d\x61\x22\x33\x25\xf6\x98\xef\x3e\xca\x84\x99\xeb\xcd\x69\x53\x7b\x16\x74\x4c\x71\x02\x8c\x63\x81\xc1\xbd\x52\x4c\xce\xb3\x05\xfa\x2d\xc4\x7a\x4c\xa7\xdb\x73\x45\x82\xcf\xc5\xc5\x71\x63\xe1\x6b\xee\xa6\xe8\x49\xb0\x41\x41\x5b\x00\x30\xf6\x64\xe1\x69\x18\xde\xf5\x51\xce\xcd\x3f\x15\x00\x1d\x56\xd4\x25\xc5\x03\x60\x08\xe6\x72\xad\x28\x32\x89\x4a\xf4\xa7\x5c\xe3\x41\x89\x03\x7c\xc0\x28\xa5\x7f\xcb\x94\x59\xd9\x39\xfa\x6b\x38\xa6\xf4\xc8\x78\xa6\xa6\xac\xfe\xec\x2f\xfa\x91\x0d\x59\x88\x2d\x75\xbd\x49\xed\xa9\x6e\x31\xca\x81\xac\x6d\xee\x85\x6e\x4e\x9d\x82\x71\x54\x99\x3a\xbd\x5f\x4e\xda\x77\xf3\x43\x66\x2f\x28\xea\x69\xbe\x6a\x93\xc8\xae\x28\x55\xfc\x4f\xec\x3b\x30\xf0\x17\xd8\x71\x43\x2c\xf0\x39\xc3\xf5\x2f\x71\xa3\x41\x0a\x54\xdb\xe2\xe0\x9d\x24\xaa\x23\xc9\xea\x9e\x2c\xa6\x97\x30\x3d\xa1\x1c\x68\x3d\x88\xc8\x67\x3a\x7e\x68\x19\x57\x4e\x66\xf1\x66\x1a\x13\x77\x6e\x25\xc7\xeb\x9d\xbb\x81\x3c\x6e\x69\x23\x04\x20\x5e\x3b\xba\xcb\xff\x48\x43\x59\x85\x7d\xd0\x54\x2b\x12\x16\x71\x00\x01\xa5\x4d\x6b\xa8\x44\x4d\x65\xa2\x9e\x56\x62\xfe\x2a\xac\x2f\xc4\x8d\xdd\x25\x55\xda\x7d\xd3\x26\xee\x6e\xf5\xfe\x2b\x71\x47\xeb\x4a\xed\xd0\xcb\x8e\xed\xcd\xdb\x38\xf1\x2f\x00\x00\xff\xff\x92\x2e\xed\x05\xf5\x03\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYaml,
		"example/configurd/.workdir/default/hi-service/templates/ingress.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/templates/ingress.yaml", size: 1013, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x31, 0x0, 0x8e, 0x36, 0x83, 0xf4, 0xd6, 0x53, 0x7f, 0xeb, 0x15, 0x1a, 0x46, 0x69, 0xdf, 0x4d, 0x9e, 0x8b, 0xaf, 0x3c, 0x72, 0xc8, 0x5a, 0xf0, 0xd0, 0xec, 0xbe, 0x6d, 0xc9, 0x1b, 0x85}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\x23\xbb\x15\xba\x6a\xed\x5e\x42\x5a\xb2\x9f\xe5\xaf\xb1\x88\x2c\x89\xd3\xd9\x10\x82\xff\x7b\x71\x9d\x40\x03\x6e\x87\x8e\x92\xde\x43\xf7\x8e\x4b\x38\x41\x6a\xc8\xc9\xd1\xf4\x62\x2e\x21\x75\x8e\xde\x21\x53\xf0\x30\x03\x94\x3b\x56\x76\x86\x28\xf1\x00\x47\xb7\x1b\xd9\x23\x22\xb8\xc2\xbe\xf1\x00\x9a\x67\x43\x14\xb9\x45\xac\x0b\x45\xc4\xa5\xd8\xcb\xd8\x42\x12\x14\xd5\x86\xbc\xff\xcb\xdc\xe2\x0b\x8b\x36\xf9\x73\x55\x4e\x1c\x47\x54\x7b\x96\x3c\x96\xdf\x95\x81\x13\x9f\xd1\x35\xed\xf5\xf9\xa3\x7b\xc8\x43\xec\x11\x07\x5b\xfb\xbd\xef\x59\xd4\xd1\x6e\x63\xa6\xe6\xe7\xdd\x11\x53\x58\x56\x43\xf3\xbc\x33\xb5\xc0\x2f\x89\x15\x11\x5e\xb3\xfc\x27\x57\xaf\x05\x4f\x5d\x75\x1d\xd0\x2e\x0f\x2b\x52\xb2\xe8\x7d\x95\xcd\xf7\x61\x93\xf7\x39\x29\x87\x04\x39\x64\xd1\x47\x1e\x51\x91\xac\xd9\xe7\xe8\xe8\xe3\xf5\x60\xbe\x02\x00\x00\xff\xff\x0a\x95\xdd\xf0\xdc\x01\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYaml,
		"example/configurd/.workdir/default/hi-service/templates/service.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/templates/service.yaml", size: 476, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x70, 0xb2, 0x74, 0x71, 0x52, 0xcc, 0xad, 0xa6, 0x9e, 0x51, 0x10, 0x25, 0xdc, 0xaf, 0xc, 0x29, 0xa3, 0x19, 0x3c, 0xdd, 0x9f, 0x10, 0x47, 0xd1, 0xa2, 0x86, 0x6d, 0x4f, 0xb9, 0x21, 0x97}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\x91\x4b\x4f\x71\xd9\xd5\x0f\x51\xca\x06\xbd\x94\x1d\x14\x47\x4b\x4c\x6d\x39\x58\x4a\xd7\x52\xf2\xee\xc3\x69\xc6\x36\xd6\xb1\xeb\x2f\x7d\xbf\xf4\x4b\x38\xfa\x03\x65\xf1\x89\x2d\x9c\x9f\xaa\x93\xe7\xce\xc2\x3e\x75\x55\x24\xc5\x0e\x15\x6d\x05\xc0\x18\xc9\x42\x7d\xbb\x81\x67\x17\xa6\x8e\xa0\xa6\x0b\xc6\x31\x90\x79\x9b\x42\x28\xe5\x1a\x0c\xcc\x73\xa3\x24\xda\xb8\xc4\x4c\x4e\x7d\xe2\xba\x02\x08\xd8\x52\x90\x62\x03\x80\xe3\x68\x4e\x53\x4b\x99\x49\x49\x8c\x4f\xdb\xbb\xf5\x23\xe7\x2f\xd7\x05\x1d\x28\x44\x23\xc3\xd6\x0d\x98\xf5\x31\xb1\x94\xbe\x21\xbf\xa7\x79\x16\x45\x76\xf7\x89\xe6\x99\x02\xa1\x90\xd9\x61\xa4\xbf\x99\x88\x8c\x3d\x75\x4d\x7b\xfd\x49\xbd\x50\x3e\x7b\xb7\x82\xc8\x9c\x14\x4b\xe4\x35\x69\xfd\xb9\xef\x90\xd2\xa9\xb6\xb0\x1c\x46\x26\xe7\x48\xa4\x92\x91\x5c\x69\x73\x89\x15\x3d\x53\x5e\xa1\x66\xbd\xf4\x7b\x4f\xba\x08\x00\x3e\x62\x4f\x16\xda\x49\xae\x6d\xba\xac\xa2\x4b\x31\x62\x79\xd4\x71\x53\x5a\x37\xaf\xab\x8e\xb9\x17\x0b\x70\xdc\xfc\xff\x29\x5b\xa2\x1c\x30\x4c\x24\x46\xee\x49\xcc\x98\xb2\xc2\x3c\x2f\x76\x99\x44\x31\xeb\x3e\x05\xef\xae\x16\x76\x74\xa6\x5c\x7d\x04\x00\x00\xff\xff\xc5\xf1\x40\xab\x2d\x02\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYaml,
		"example/configurd/.workdir/default/hi-service/templates/tests/test-connection.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/templates/tests/test-connection.yaml", size: 557, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x1e, 0x76, 0x8c, 0xa3, 0xb5, 0xf5, 0xe1, 0x31, 0x77, 0x28, 0xd9, 0x4c, 0x67, 0xce, 0x75, 0x37, 0x1c, 0x5c, 0xb8, 0xc3, 0xbc, 0x22, 0x1c, 0x4, 0xa, 0x5d, 0xab, 0xfb, 0xdd, 0x92, 0x7e}}
	return a, nil
}

var _exampleConfigurdWorkdirDefaultHiServiceValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdc\x46\x0c\xbd\xcf\xaf\x20\xd6\x87\x5c\xec\xad\x9d\x5e\x02\x01\x39\x18\x4e\x5b\x18\xb0\x9d\x45\xd7\x45\x51\x04\x39\x70\x47\x94\x34\xed\x68\xa8\x92\x9c\x75\x84\xa2\xff\xbd\x98\x91\xfc\xd1\x38\x87\x9c\x76\x76\xf4\xc8\x79\x7c\x7c\xe4\x09\x7c\xa0\x0e\x73\x34\x38\x62\xcc\xa4\xd0\xb1\x80\x91\xda\xd6\x9d\xc0\xfd\x10\x14\x82\x02\xc2\x1f\x97\xb7\x37\x67\x1d\xcb\x88\x66\xd4\x42\x17\x22\x15\xc0\x07\xf2\x11\x85\xe0\x88\x12\xf0\x10\x49\xc1\x18\x0e\x04\x13\xaa\x52\x0b\x21\x19\xc3\xcc\xb9\x64\x1c\xa7\x88\x46\xba\x75\x4e\x68\x8a\xc1\xe3\x15\xe7\x64\x0d\x5c\x38\x17\x46\xec\xa9\x71\x00\x42\x13\x6b\x30\x96\xb9\x81\xd4\x87\xf4\xc5\x01\x18\xf6\x0d\xd4\x50\x73\x00\x53\x8e\x71\xc7\x31\xf8\xb9\x81\xeb\xee\x8e\x6d\x27\xa4\x94\x6c\x4d\xb2\xcb\x31\xee\xc9\x0b\x99\x36\xf0\xe9\xb3\x4b\x38\xd2\xc7\x23\x89\x84\x96\x1a\xd8\x6c\x5c\x97\x63\x7c\x75\xe9\x94\xe4\x18\x3c\x5d\x7a\x5f\x39\x39\x80\x13\xd8\x4f\xe4\x43\x17\x48\xe1\x61\x20\x1b\x48\x00\x61\xc5\x01\x2e\x40\xd0\x81\x73\x6c\x4b\xc1\x5e\x08\x8d\x5a\x07\xeb\xa9\x01\x93\x4c\x35\xd1\x65\x4a\x6c\x68\x81\x53\x55\x07\xdb\xb6\xfc\xd8\x40\x5f\xa7\x73\x00\xf8\x8c\x6d\xe0\x9f\x7f\x6b\xfc\xfd\x40\x50\x28\x03\x77\xdf\x8a\x2a\xc9\xb2\xd2\xb6\x62\xaf\x3b\x48\x6c\xa0\x64\x80\xa9\x5d\xb9\x94\x0e\x16\x36\xa7\x80\x4b\xa2\xa0\xd0\x53\x22\x29\x8c\x21\x6b\x48\x7d\x4d\xfc\xa8\xcd\x53\xb3\x1c\x54\x7c\xe3\xdc\xc4\xed\x9e\x7c\x96\x60\xf3\x15\x27\xa3\x2f\xf6\x44\xaf\xd3\x5f\x84\xf3\xd4\xc0\xdb\xf3\xf3\xf3\x22\xe5\xb7\x61\x1e\x27\x3c\x84\x18\x2c\x90\x2e\x02\x03\xb4\xc2\xd3\xe3\xf9\x0c\x2e\x6f\x6e\xea\x59\x08\xdb\x8f\x29\xce\xbf\x32\xdb\xcf\x21\x92\xce\x6a\x34\xbe\x10\x54\x72\xba\xd4\x3b\x4e\x05\xf0\xf5\xf5\x6f\x4a\xd2\xc0\xc5\x4a\xa5\x0a\x55\x5e\xb0\x79\xa2\x06\xae\x62\x56\x23\xb9\xde\x15\x23\xb1\x58\x03\xef\xce\x4b\xc7\x38\x19\x86\x44\xb2\xab\x77\x3f\xd6\xe0\x7e\x29\xaa\xda\xce\x51\x3a\x56\x3b\x95\x67\xce\x16\x4d\xe0\xfe\xa7\xfd\xfd\xca\xbd\x4e\x4e\x03\x9b\x02\xde\x38\x87\xd2\xeb\x0b\xf8\x06\xa5\xbf\x78\xff\x9e\x13\x6d\x9c\x73\x21\xf5\x42\x5a\x25\x78\xdd\xec\x12\xf0\x57\x3e\x90\x24\x2a\xa3\x12\xf8\x87\x15\xbe\xf5\x11\x55\x9f\x87\xe2\x35\xd0\xa2\x9e\xa1\x1f\x2b\x0d\xc9\xb4\x71\x00\x03\xab\x55\x7f\x03\x4c\x68\xc3\x7a\xd4\x3a\x1e\x77\xb5\x86\xe2\x7d\x21\xe5\x2c\x9e\x9e\x0d\xf7\x3b\x41\xd6\x8c\x31\xce\x20\xe4\x79\x1c\x29\xb5\xd5\x56\xc6\xa0\x75\x2a\x66\x68\xd7\xa5\xf1\x14\x5d\xfd\x66\x0c\x91\xf0\x48\x60\x65\x71\x60\x59\x1c\x9e\x93\xfa\xc0\x59\x17\x17\x0c\x5c\xac\x5b\x77\xcc\x50\x9e\x21\xd9\x2e\x5b\x06\xa3\x32\x84\x54\x1c\xab\xa4\xe0\x07\x4c\x7e\xf9\x15\xd3\xd2\x5b\xe0\x04\x94\x8e\x41\x38\x8d\x94\x4c\xe1\x21\xd8\x00\x31\x98\xc5\xb5\xff\x8f\x54\x4e\x41\xb3\x1f\xca\xf3\xb7\x21\x85\x22\xd3\xb6\x0c\xc6\xcc\x19\x5a\x86\x07\x4c\xff\xab\xe4\x45\x58\x4e\x4b\xb5\xb6\x8c\x03\xc7\xc8\x0f\x21\xf5\x35\x7b\x0c\xa9\x40\xb0\xfd\x33\x6b\xfd\x3e\x96\x07\x12\x79\x52\x45\x99\x4f\x6b\xfd\x42\x23\xd7\xea\x09\x7c\x96\x38\xc3\x41\xb0\x6a\xd3\x19\x09\xbc\x79\x96\xfa\xcd\x76\x4d\x3a\x06\x7b\x1a\x07\x3f\xe5\x6a\xdd\x71\xfd\x3f\xd2\x58\x37\xe1\xc5\xdb\x77\xb7\x61\x2d\xf1\xef\x4c\xfa\xbd\x11\x2e\x71\x4b\x7b\x8a\xe4\x8d\xa5\x76\xd7\x19\xc7\x32\xf6\x8b\xe5\x3e\x7d\x76\x0e\xbb\x2e\xa4\x60\x73\xfd\xfc\x5f\x00\x00\x00\xff\xff\x79\x8e\x4d\x92\x0c\x06\x00\x00")

func exampleConfigurdWorkdirDefaultHiServiceValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdWorkdirDefaultHiServiceValuesYaml,
		"example/configurd/.workdir/default/hi-service/values.yaml",
	)
}

func exampleConfigurdWorkdirDefaultHiServiceValuesYaml() (*asset, error) {
	bytes, err := exampleConfigurdWorkdirDefaultHiServiceValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/.workdir/default/hi-service/values.yaml", size: 1548, mode: os.FileMode(0644), modTime: time.Unix(1591865629, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x9b, 0x91, 0x2, 0x3c, 0x74, 0x44, 0xf5, 0x30, 0x13, 0xc4, 0xac, 0xbe, 0x6a, 0xf9, 0xa5, 0xab, 0xb2, 0x96, 0x82, 0xd1, 0x42, 0x45, 0x73, 0x83, 0x21, 0xd6, 0xa1, 0x33, 0x5d, 0xb2, 0xcc}}
	return a, nil
}

var _exampleConfigurdChartsExampleHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\xc7\x36\x96\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\xdc\xb2\xc2\x0a\x24\xe4\xd2\x18\x97\xc8\x19\xe3\x2a\x69\x96\x1c\x50\xfd\x74\xf2\x81\xd5\x51\x87\x97\x28\x0a\x5d\x6b\x2d\xcd\x14\x1a\x39\x25\x84\x54\x46\x2c\xde\xa6\x28\x39\xfc\x45\xe3\xe4\x4d\xce\x8c\xea\x2d\xfe\xf0\x3e\xcf\xd4\x21\x73\xf0\x26\x25\xe3\x77\x6d\x7c\x90\x37\x9e\x71\x11\x8b\xf8\xf5\xc7\xe1\x29\xa7\x77\x94\x7c\xbb\xbc\x26\xa1\x72\x43\x92\xcc\x8e\xdc\x76\xf7\xba\xb3\xd2\x98\x3a\x6c\xca\xb2\x94\x8c\xfd\x66\x87\x59\x9a\x92\x0b\x62\xc3\x8d\xf7\x7c\x72\xe3\x47\x1b\x6e\x7c\x88\x18\x86\x2b\x1e\xa3\x9e\xf3\xf0\xfd\x68\xf4\xd3\x69\xad\x38\x48\x62\xa5\xde\xe9\xa5\x52\xef\x46\x7f\xa2\xde\xd9\x52\xa9\xff\xa4\x0e\x7b\xdf\xa4\xac\x8a\xff\xdb\x7f\x4a\xae\xb6\x72\xe4\xc9\xc8\xc9\xcc\x7e\xb8\xef\xb5\x72\x24\x77\xd6\xa9\xcc\x3c\xd0\x57\x00\x00\x00\xff\xff\xf5\x89\xaa\x2d\x56\x01\x00\x00")

func exampleConfigurdChartsExampleHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleHelmignore,
		"example/configurd/charts/example/.helmignore",
	)
}

func exampleConfigurdChartsExampleHelmignore() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/.helmignore", size: 342, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x47, 0x51, 0x86, 0xcc, 0xba, 0xa9, 0xa0, 0xa4, 0xde, 0x5e, 0x96, 0xa5, 0xcb, 0x6d, 0xdc, 0xf9, 0xfa, 0xd0, 0xd7, 0x6b, 0xc3, 0x8e, 0x4, 0x47, 0xa, 0xc8, 0x44, 0x45, 0xb2, 0x1a, 0x16}}
	return a, nil
}

var _exampleConfigurdChartsExampleChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\x4a\x2c\x28\x80\x73\x95\x0c\xf5\x0c\x94\xb8\x52\x52\x8b\x93\x8b\x32\x0b\x4a\xc0\x42\x8e\x79\x0a\xae\x15\x89\xb9\x05\x39\xa9\x0a\xce\x19\x89\x45\x25\x0a\x69\xf9\x45\x0a\xce\xf9\x79\x69\x99\xe9\xa5\x45\x29\x5c\x79\x89\xb9\xa9\x56\x0a\xa9\x10\x15\x5c\x65\x30\x83\x0c\xf4\x0c\xf5\x0c\xb8\x00\x01\x00\x00\xff\xff\xe2\x6b\xa4\x38\x6a\x00\x00\x00")

func exampleConfigurdChartsExampleChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleChartYaml,
		"example/configurd/charts/example/Chart.yaml",
	)
}

func exampleConfigurdChartsExampleChartYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/Chart.yaml", size: 106, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0xa3, 0x89, 0xbd, 0x29, 0xae, 0x35, 0x24, 0x16, 0x67, 0x5b, 0xa1, 0x31, 0xb7, 0x39, 0x9, 0xed, 0xc3, 0xb, 0x17, 0xc1, 0xd0, 0xc9, 0x6e, 0x4, 0xe0, 0x64, 0xea, 0x9, 0x5d, 0xd1, 0x56}}
	return a, nil
}

var _exampleConfigurdChartsExampleTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x0f\xd1\x40\x9b\xb2\xce\xa1\xd0\xc3\x42\x4e\x69\x0f\xa5\x90\x42\x03\xe9\xb1\xc8\xf6\xa8\x3b\x20\xcb\xae\x46\xda\xee\x92\xe4\xbf\x17\x49\x8e\x77\xb7\xe0\xb2\x7b\x1b\xac\xa7\x37\x6f\xbe\x91\x9f\x9e\x6e\xae\xb1\xe5\x7e\x0d\xa1\x00\xc3\x96\xc2\x7e\xa4\xdb\x3e\x4a\xd0\xed\x86\xd6\xb8\xbe\x79\x79\xa9\x92\xaa\xfa\xbc\x1b\xb5\xeb\x10\x36\x04\xa7\x7b\xc2\x60\x72\xdd\x6e\xb4\x0f\x75\x35\xe9\x56\xe8\xc8\xb0\x23\x28\xda\xe9\x7e\xb4\x54\x27\xad\xc2\xea\x70\xaa\xa3\x0d\xa8\xef\xf2\xb5\xfb\x64\x54\x3f\x6a\x1b\x49\xb2\xf2\xdb\x96\xbc\xe7\x8e\xf0\x8c\xe0\xa3\x6b\xf1\xf1\x43\x2e\xb9\x7f\x88\xc6\xf0\x0e\x6a\x75\x30\x23\xd7\xe5\xba\xe4\xbb\xf3\xa4\x03\x41\xcf\x3d\x4c\xb4\x76\x8f\xdf\x51\x5b\x36\x4c\x1d\xf4\x38\xe6\xe4\x75\xf5\x83\x8a\x7b\xd6\x87\xd4\x23\x4d\x21\x68\xa8\xd5\x51\x08\x32\xf4\x84\xaf\xb1\x21\xef\x28\x90\x94\x79\x0d\x93\xed\x04\xda\x13\x2c\xf7\x1c\xa8\x43\x18\x10\x36\x2c\x78\xdb\xec\x33\x8b\x4f\xf7\x0f\x49\xcb\xee\x17\x64\xa4\xf6\x5d\x5d\x7d\x31\xf0\x64\x49\xcb\x04\xad\x1d\x5c\xd0\xec\xa4\x60\x2b\xdf\x38\xe0\x0f\x5b\x8b\x86\x10\x25\xe5\x14\xe8\x1c\x7e\x4a\xbb\x88\x36\x69\x4e\xf1\xb2\x99\x69\xbe\x1e\xce\x44\x5f\x35\x8b\x82\xb3\x90\x5b\x39\x38\xbd\xc9\xf1\xd7\xb7\xe7\x6f\xf5\x28\xe7\x4c\xa2\xb8\xd4\xdf\x0b\xa6\x72\x79\xce\x7a\xf2\xf5\xe2\x80\xa3\x67\x17\x0c\xd4\x95\xac\xae\x44\xfd\xe3\x56\xfa\x5e\xf2\xce\x96\xea\x93\xf7\x77\xb4\xd8\xf4\xbb\x6c\xc9\x0b\x0f\x2e\x2d\x35\x2f\x77\x7a\x29\x45\x65\x75\x43\xf6\x3f\x0b\xce\x2a\xb5\x38\xce\x31\xed\x52\x3f\x4e\xdd\x9e\xe1\x69\xb4\xba\x25\xa8\xf7\x0a\xea\xa7\xba\x68\xce\xbf\x01\x00\x00\xff\xff\xef\x62\xa1\x95\x15\x04\x00\x00")

func exampleConfigurdChartsExampleTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleTemplates_helpersTpl,
		"example/configurd/charts/example/templates/_helpers.tpl",
	)
}

func exampleConfigurdChartsExampleTemplates_helpersTpl() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/templates/_helpers.tpl", size: 1045, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xb0, 0x6b, 0xd, 0x90, 0x89, 0xbb, 0x4, 0xfd, 0x26, 0xc5, 0x68, 0x60, 0x4d, 0x6a, 0x5a, 0x23, 0x70, 0x2a, 0x48, 0x23, 0x9c, 0x1d, 0x71, 0x42, 0xb, 0x6, 0x3, 0x65, 0xfb, 0xea, 0x3f}}
	return a, nil
}

var _exampleConfigurdChartsExampleTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x08\xbd\xdb\x45\x77\x1a\x7c\xed\x8e\xdb\x60\xb4\x43\x81\x1d\x19\x99\xb5\x85\x4a\xa2\x20\xd1\x1e\x82\x2c\xff\x7d\x50\xec\xb8\x52\x9c\x8f\x2e\xa8\x6f\xa6\x1e\xf9\x9e\x1e\x45\x82\x53\x2f\xe8\x83\x22\x5b\x09\x70\x2e\xdc\x0f\x0f\xab\x37\x65\x9b\x4a\x7c\x43\xa7\x69\x63\xd0\xf2\xca\x20\x43\x03\x0c\xd5\x4a\x08\x0b\x06\x2b\x71\xb7\xdd\x8a\xf2\x09\x35\x42\xc0\xf2\x27\x18\x14\xbb\xdd\xdd\x4a\x08\x0d\x6b\xd4\x21\xe2\x44\x2c\x57\xbe\xf5\x6b\xf4\x16\x19\x43\xa9\xe8\x7e\xcc\x3d\x91\x7a\x06\xef\xc0\x73\x41\xaf\x63\xca\x0b\xe8\x1e\x43\xd9\x7a\xea\xdd\xf9\x14\x03\x16\x5a\x6c\x8a\xf5\x26\x27\x7a\x46\x3f\x28\x39\x73\x75\xa8\x4d\x19\xba\x7b\xd9\x81\xe7\xd3\xd7\x29\xd2\xd8\x13\x0e\x2a\x9a\xb4\xbf\x66\x70\x28\xe3\x15\x3d\x3a\xad\x24\x84\x4c\xdf\x14\x7c\xa4\xde\xf2\xc8\x16\x50\xa3\x64\xf2\xa3\x2b\x06\x58\x76\xdf\x13\x9b\xfe\xdf\xa8\x1b\xac\x62\x34\x4e\x03\xe3\xa4\x21\xe9\x67\xfc\x74\x26\xe7\x16\x41\x37\x75\xef\xe0\x63\xfc\x24\x59\x06\x65\xd1\x27\x32\x0a\x71\x9d\x56\x08\x65\xa0\x3d\xbc\xc8\x89\x65\x1f\x8a\x9d\xa0\xa0\x98\xfc\x46\xec\x76\xd5\xe2\x98\xa1\x9d\x1e\x6d\x56\xa9\xee\xb5\xae\x49\x2b\xb9\xc9\x84\x8f\x39\x6e\x3e\xcc\x35\x6c\xb7\x85\xf8\xa3\xb8\x9b\xe1\xe0\xdb\x90\x43\x62\xa4\x4a\xfe\xc7\x24\xa6\xdf\x60\xb4\x28\xc5\x5f\x61\x95\x6d\xd0\xb2\x78\xf8\xb2\xac\x8d\xb6\xb9\x42\x88\x76\xc8\x11\x68\x87\xcf\xa3\x73\xe4\xf9\x48\xfd\xa1\x39\x73\xe3\x8a\x08\xca\x20\x49\x57\x6b\x8a\x63\x96\xf8\x19\xc6\x79\x2c\x33\x44\x4e\xba\x27\xf6\xc4\x24\x49\x57\xe2\xd7\x63\x9d\x9c\x69\x35\xa0\xc5\x10\x6a\x4f\x6b\xcc\x85\xb1\x74\xcf\x24\xdf\x90\xab\xe3\x5a\x7b\x0d\x67\xf5\x7a\x84\x46\x7d\x7a\xcd\x40\xbd\x97\x78\xa1\xf3\xf3\xda\x98\x90\x17\x5a\x33\x90\xee\x0d\xfe\x88\x9b\xe5\x44\x41\x0f\xb6\xc5\xb9\xde\x88\x0d\xc7\x8e\xa6\x23\x65\x17\xa3\x14\x3f\x13\xcb\xd7\xc0\xdd\x08\x32\xef\x7b\x2c\xa7\xcb\xde\xc8\xc4\xf6\x2e\xea\x43\x82\x2e\x8b\xe9\x28\x8c\x3a\x32\x6a\x37\x2b\x8b\xe7\x69\xc6\x42\xd4\x62\x46\x2c\x35\xf8\x3c\x2d\xe3\x77\x58\x1a\xcd\x2f\x70\x62\x5a\xbe\xe6\xe5\x13\xbe\xe5\x0a\x78\x7d\x55\x56\x71\xb2\x29\x0e\x91\x8f\xb3\x5c\xe3\x60\xd2\xe8\x81\x15\xd9\xc4\xd8\x24\x78\x13\xd3\xbf\x00\x00\x00\xff\xff\x63\x3e\x7e\x07\x13\x08\x00\x00")

func exampleConfigurdChartsExampleTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleTemplatesDeploymentYaml,
		"example/configurd/charts/example/templates/deployment.yaml",
	)
}

func exampleConfigurdChartsExampleTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/templates/deployment.yaml", size: 2067, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x7c, 0x90, 0x45, 0x2b, 0xdb, 0xfe, 0xca, 0x5e, 0x58, 0xcd, 0xb4, 0x65, 0xda, 0x10, 0xec, 0xd0, 0x1a, 0xbc, 0xf4, 0xf2, 0x33, 0xe1, 0xe3, 0x19, 0xe8, 0xd0, 0x37, 0xbd, 0x27, 0x5b, 0xfc}}
	return a, nil
}

var _exampleConfigurdChartsExampleTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x8e\x9c\x30\x0c\xbd\xf3\x15\xd6\xaa\x57\x32\x5a\xa9\xa7\x48\xfd\x80\x5e\xaa\x6a\x2b\xad\xd4\xa3\x01\xef\x10\x0d\x38\x51\xe2\x99\xb6\xa2\xfc\x7b\x65\x02\x03\x74\x07\x69\x39\xc5\xe6\x3d\xc7\xef\x39\x1e\x86\x12\xdc\x1b\x98\x57\xec\xae\x94\x8c\xe3\x73\xa4\x94\x4c\xeb\x93\x24\x18\xc7\x62\x18\xe0\x53\xa2\x78\x73\x35\x7d\xc3\x9e\xc0\x7e\x01\xf3\x42\x1d\x61\x22\x33\x25\xf6\x98\xef\x3e\xca\x84\x99\xeb\xcd\x69\x53\x7b\x16\x74\x4c\x71\x02\x8c\x63\x81\xc1\xbd\x52\x4c\xce\xb3\x05\xfa\x2d\xc4\x7a\x4c\xa7\xdb\x73\x45\x82\xcf\xc5\xc5\x71\x63\xe1\x6b\xee\xa6\xe8\x49\xb0\x41\x41\x5b\x00\x30\xf6\x64\xe1\x69\x18\xde\xf5\x51\xce\xcd\x3f\x15\x00\x1d\x56\xd4\x25\xc5\x03\x60\x08\xe6\x72\xad\x28\x32\x89\x4a\xf4\xa7\x5c\xe3\x41\x89\x03\x7c\xc0\x28\xa5\x7f\xcb\x94\x59\xd9\x39\xfa\x6b\x38\xa6\xf4\xc8\x78\xa6\xa6\xac\xfe\xec\x2f\xfa\x91\x0d\x59\x88\x2d\x75\xbd\x49\xed\xa9\x6e\x31\xca\x81\xac\x6d\xee\x85\x6e\x4e\x9d\x82\x71\x54\x99\x3a\xbd\x5f\x4e\xda\x77\xf3\x43\x66\x2f\x28\xea\x69\xbe\x6a\x93\xc8\xae\x28\x55\xfc\x4f\xec\x3b\x30\xf0\x17\xd8\x71\x43\x2c\xf0\x39\xc3\xf5\x2f\x71\xa3\x41\x0a\x54\xdb\xe2\xe0\x9d\x24\xaa\x23\xc9\xea\x9e\x2c\xa6\x97\x30\x3d\xa1\x1c\x68\x3d\x88\xc8\x67\x3a\x7e\x68\x19\x57\x4e\x66\xf1\x66\x1a\x13\x77\x6e\x25\xc7\xeb\x9d\xbb\x81\x3c\x6e\x69\x23\x04\x20\x5e\x3b\xba\xcb\xff\x48\x43\x59\x85\x7d\xd0\x54\x2b\x12\x16\x71\x00\x01\xa5\x4d\x6b\xa8\x44\x4d\x65\xa2\x9e\x56\x62\xfe\x2a\xac\x2f\xc4\x8d\xdd\x25\x55\xda\x7d\xd3\x26\xee\x6e\xf5\xfe\x2b\x71\x47\xeb\x4a\xed\xd0\xcb\x8e\xed\xcd\xdb\x38\xf1\x2f\x00\x00\xff\xff\x92\x2e\xed\x05\xf5\x03\x00\x00")

func exampleConfigurdChartsExampleTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleTemplatesIngressYaml,
		"example/configurd/charts/example/templates/ingress.yaml",
	)
}

func exampleConfigurdChartsExampleTemplatesIngressYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/templates/ingress.yaml", size: 1013, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x31, 0x0, 0x8e, 0x36, 0x83, 0xf4, 0xd6, 0x53, 0x7f, 0xeb, 0x15, 0x1a, 0x46, 0x69, 0xdf, 0x4d, 0x9e, 0x8b, 0xaf, 0x3c, 0x72, 0xc8, 0x5a, 0xf0, 0xd0, 0xec, 0xbe, 0x6d, 0xc9, 0x1b, 0x85}}
	return a, nil
}

var _exampleConfigurdChartsExampleTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x31\x6b\xc3\x30\x10\x46\x77\xfd\x8a\x23\xbb\x15\xba\x6a\xed\x5e\x42\x5a\xb2\x9f\xe5\xaf\xb1\x88\x2c\x89\xd3\xd9\x10\x82\xff\x7b\x71\x9d\x40\x03\x6e\x87\x8e\x92\xde\x43\xf7\x8e\x4b\x38\x41\x6a\xc8\xc9\xd1\xf4\x62\x2e\x21\x75\x8e\xde\x21\x53\xf0\x30\x03\x94\x3b\x56\x76\x86\x28\xf1\x00\x47\xb7\x1b\xd9\x23\x22\xb8\xc2\xbe\xf1\x00\x9a\x67\x43\x14\xb9\x45\xac\x0b\x45\xc4\xa5\xd8\xcb\xd8\x42\x12\x14\xd5\x86\xbc\xff\xcb\xdc\xe2\x0b\x8b\x36\xf9\x73\x55\x4e\x1c\x47\x54\x7b\x96\x3c\x96\xdf\x95\x81\x13\x9f\xd1\x35\xed\xf5\xf9\xa3\x7b\xc8\x43\xec\x11\x07\x5b\xfb\xbd\xef\x59\xd4\xd1\x6e\x63\xa6\xe6\xe7\xdd\x11\x53\x58\x56\x43\xf3\xbc\x33\xb5\xc0\x2f\x89\x15\x11\x5e\xb3\xfc\x27\x57\xaf\x05\x4f\x5d\x75\x1d\xd0\x2e\x0f\x2b\x52\xb2\xe8\x7d\x95\xcd\xf7\x61\x93\xf7\x39\x29\x87\x04\x39\x64\xd1\x47\x1e\x51\x91\xac\xd9\xe7\xe8\xe8\xe3\xf5\x60\xbe\x02\x00\x00\xff\xff\x0a\x95\xdd\xf0\xdc\x01\x00\x00")

func exampleConfigurdChartsExampleTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleTemplatesServiceYaml,
		"example/configurd/charts/example/templates/service.yaml",
	)
}

func exampleConfigurdChartsExampleTemplatesServiceYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/templates/service.yaml", size: 476, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x70, 0xb2, 0x74, 0x71, 0x52, 0xcc, 0xad, 0xa6, 0x9e, 0x51, 0x10, 0x25, 0xdc, 0xaf, 0xc, 0x29, 0xa3, 0x19, 0x3c, 0xdd, 0x9f, 0x10, 0x47, 0xd1, 0xa2, 0x86, 0x6d, 0x4f, 0xb9, 0x21, 0x97}}
	return a, nil
}

var _exampleConfigurdChartsExampleTemplatesTestsTestConnectionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\x91\x4b\x4f\x71\xd9\xd5\x0f\x51\xca\x06\xbd\x94\x1d\x14\x47\x4b\x4c\x6d\x39\x58\x4a\xd7\x52\xf2\xee\xc3\x69\xc6\x36\xd6\xb1\xeb\x2f\x7d\xbf\xf4\x4b\x38\xfa\x03\x65\xf1\x89\x2d\x9c\x9f\xaa\x93\xe7\xce\xc2\x3e\x75\x55\x24\xc5\x0e\x15\x6d\x05\xc0\x18\xc9\x42\x7d\xbb\x81\x67\x17\xa6\x8e\xa0\xa6\x0b\xc6\x31\x90\x79\x9b\x42\x28\xe5\x1a\x0c\xcc\x73\xa3\x24\xda\xb8\xc4\x4c\x4e\x7d\xe2\xba\x02\x08\xd8\x52\x90\x62\x03\x80\xe3\x68\x4e\x53\x4b\x99\x49\x49\x8c\x4f\xdb\xbb\xf5\x23\xe7\x2f\xd7\x05\x1d\x28\x44\x23\xc3\xd6\x0d\x98\xf5\x31\xb1\x94\xbe\x21\xbf\xa7\x79\x16\x45\x76\xf7\x89\xe6\x99\x02\xa1\x90\xd9\x61\xa4\xbf\x99\x88\x8c\x3d\x75\x4d\x7b\xfd\x49\xbd\x50\x3e\x7b\xb7\x82\xc8\x9c\x14\x4b\xe4\x35\x69\xfd\xb9\xef\x90\xd2\xa9\xb6\xb0\x1c\x46\x26\xe7\x48\xa4\x92\x91\x5c\x69\x73\x89\x15\x3d\x53\x5e\xa1\x66\xbd\xf4\x7b\x4f\xba\x08\x00\x3e\x62\x4f\x16\xda\x49\xae\x6d\xba\xac\xa2\x4b\x31\x62\x79\xd4\x71\x53\x5a\x37\xaf\xab\x8e\xb9\x17\x0b\x70\xdc\xfc\xff\x29\x5b\xa2\x1c\x30\x4c\x24\x46\xee\x49\xcc\x98\xb2\xc2\x3c\x2f\x76\x99\x44\x31\xeb\x3e\x05\xef\xae\x16\x76\x74\xa6\x5c\x7d\x04\x00\x00\xff\xff\xc5\xf1\x40\xab\x2d\x02\x00\x00")

func exampleConfigurdChartsExampleTemplatesTestsTestConnectionYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleTemplatesTestsTestConnectionYaml,
		"example/configurd/charts/example/templates/tests/test-connection.yaml",
	)
}

func exampleConfigurdChartsExampleTemplatesTestsTestConnectionYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleTemplatesTestsTestConnectionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/templates/tests/test-connection.yaml", size: 557, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x1e, 0x76, 0x8c, 0xa3, 0xb5, 0xf5, 0xe1, 0x31, 0x77, 0x28, 0xd9, 0x4c, 0x67, 0xce, 0x75, 0x37, 0x1c, 0x5c, 0xb8, 0xc3, 0xbc, 0x22, 0x1c, 0x4, 0xa, 0x5d, 0xab, 0xfb, 0xdd, 0x92, 0x7e}}
	return a, nil
}

var _exampleConfigurdChartsExampleValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xdc\x46\x0c\xbd\xcf\xaf\x20\xd6\x87\x5c\xec\xad\x9d\x5e\x02\x01\x39\x18\x4e\x5b\x18\xb0\x9d\x45\xd7\x45\x51\x04\x39\x70\x47\x94\x34\xed\x68\xa8\x92\x9c\x75\x84\xa2\xff\xbd\x98\x91\xfc\xd1\x38\x87\x9c\x76\x76\xf4\xc8\x79\x7c\x7c\xe4\x09\x7c\xa0\x0e\x73\x34\x38\x62\xcc\xa4\xd0\xb1\x80\x91\xda\xd6\x9d\xc0\xfd\x10\x14\x82\x02\xc2\x1f\x97\xb7\x37\x67\x1d\xcb\x88\x66\xd4\x42\x17\x22\x15\xc0\x07\xf2\x11\x85\xe0\x88\x12\xf0\x10\x49\xc1\x18\x0e\x04\x13\xaa\x52\x0b\x21\x19\xc3\xcc\xb9\x64\x1c\xa7\x88\x46\xba\x75\x4e\x68\x8a\xc1\xe3\x15\xe7\x64\x0d\x5c\x38\x17\x46\xec\xa9\x71\x00\x42\x13\x6b\x30\x96\xb9\x81\xd4\x87\xf4\xc5\x01\x18\xf6\x0d\xd4\x50\x73\x00\x53\x8e\x71\xc7\x31\xf8\xb9\x81\xeb\xee\x8e\x6d\x27\xa4\x94\x6c\x4d\xb2\xcb\x31\xee\xc9\x0b\x99\x36\xf0\xe9\xb3\x4b\x38\xd2\xc7\x23\x89\x84\x96\x1a\xd8\x6c\x5c\x97\x63\x7c\x75\xe9\x94\xe4\x18\x3c\x5d\x7a\x5f\x39\x39\x80\x13\xd8\x4f\xe4\x43\x17\x48\xe1\x61\x20\x1b\x48\x00\x61\xc5\x01\x2e\x40\xd0\x81\x73\x6c\x4b\xc1\x5e\x08\x8d\x5a\x07\xeb\xa9\x01\x93\x4c\x35\xd1\x65\x4a\x6c\x68\x81\x53\x55\x07\xdb\xb6\xfc\xd8\x40\x5f\xa7\x73\x00\xf8\x8c\x6d\xe0\x9f\x7f\x6b\xfc\xfd\x40\x50\x28\x03\x77\xdf\x8a\x2a\xc9\xb2\xd2\xb6\x62\xaf\x3b\x48\x6c\xa0\x64\x80\xa9\x5d\xb9\x94\x0e\x16\x36\xa7\x80\x4b\xa2\xa0\xd0\x53\x22\x29\x8c\x21\x6b\x48\x7d\x4d\xfc\xa8\xcd\x53\xb3\x1c\x54\x7c\xe3\xdc\xc4\xed\x9e\x7c\x96\x60\xf3\x15\x27\xa3\x2f\xf6\x44\xaf\xd3\x5f\x84\xf3\xd4\xc0\xdb\xf3\xf3\xf3\x22\xe5\xb7\x61\x1e\x27\x3c\x84\x18\x2c\x90\x2e\x02\x03\xb4\xc2\xd3\xe3\xf9\x0c\x2e\x6f\x6e\xea\x59\x08\xdb\x8f\x29\xce\xbf\x32\xdb\xcf\x21\x92\xce\x6a\x34\xbe\x10\x54\x72\xba\xd4\x3b\x4e\x05\xf0\xf5\xf5\x6f\x4a\xd2\xc0\xc5\x4a\xa5\x0a\x55\x5e\xb0\x79\xa2\x06\xae\x62\x56\x23\xb9\xde\x15\x23\xb1\x58\x03\xef\xce\x4b\xc7\x38\x19\x86\x44\xb2\xab\x77\x3f\xd6\xe0\x7e\x29\xaa\xda\xce\x51\x3a\x56\x3b\x95\x67\xce\x16\x4d\xe0\xfe\xa7\xfd\xfd\xca\xbd\x4e\x4e\x03\x9b\x02\xde\x38\x87\xd2\xeb\x0b\xf8\x06\xa5\xbf\x78\xff\x9e\x13\x6d\x9c\x73\x21\xf5\x42\x5a\x25\x78\xdd\xec\x12\xf0\x57\x3e\x90\x24\x2a\xa3\x12\xf8\x87\x15\xbe\xf5\x11\x55\x9f\x87\xe2\x35\xd0\xa2\x9e\xa1\x1f\x2b\x0d\xc9\xb4\x71\x00\x03\xab\x55\x7f\x03\x4c\x68\xc3\x7a\xd4\x3a\x1e\x77\xb5\x86\xe2\x7d\x21\xe5\x2c\x9e\x9e\x0d\xf7\x3b\x41\xd6\x8c\x31\xce\x20\xe4\x79\x1c\x29\xb5\xd5\x56\xc6\xa0\x75\x2a\x66\x68\xd7\xa5\xf1\x14\x5d\xfd\x66\x0c\x91\xf0\x48\x60\x65\x71\x60\x59\x1c\x9e\x93\xfa\xc0\x59\x17\x17\x0c\x5c\xac\x5b\x77\xcc\x50\x9e\x21\xd9\x2e\x5b\x06\xa3\x32\x84\x54\x1c\xab\xa4\xe0\x07\x4c\x7e\xf9\x15\xd3\xd2\x5b\xe0\x04\x94\x8e\x41\x38\x8d\x94\x4c\xe1\x21\xd8\x00\x31\x98\xc5\xb5\xff\x8f\x54\x4e\x41\xb3\x1f\xca\xf3\xb7\x21\x85\x22\xd3\xb6\x0c\xc6\xcc\x19\x5a\x86\x07\x4c\xff\xab\xe4\x45\x58\x4e\x4b\xb5\xb6\x8c\x03\xc7\xc8\x0f\x21\xf5\x35\x7b\x0c\xa9\x40\xb0\xfd\x33\x6b\xfd\x3e\x96\x07\x12\x79\x52\x45\x99\x4f\x6b\xfd\x42\x23\xd7\xea\x09\x7c\x96\x38\xc3\x41\xb0\x6a\xd3\x19\x09\xbc\x79\x96\xfa\xcd\x76\x4d\x3a\x06\x7b\x1a\x07\x3f\xe5\x6a\xdd\x71\xfd\x3f\xd2\x58\x37\xe1\xc5\xdb\x77\xb7\x61\x2d\xf1\xef\x4c\xfa\xbd\x11\x2e\x71\x4b\x7b\x8a\xe4\x8d\xa5\x76\xd7\x19\xc7\x32\xf6\x8b\xe5\x3e\x7d\x76\x0e\xbb\x2e\xa4\x60\x73\xfd\xfc\x5f\x00\x00\x00\xff\xff\x79\x8e\x4d\x92\x0c\x06\x00\x00")

func exampleConfigurdChartsExampleValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsExampleValuesYaml,
		"example/configurd/charts/example/values.yaml",
	)
}

func exampleConfigurdChartsExampleValuesYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsExampleValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/example/values.yaml", size: 1548, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x9b, 0x91, 0x2, 0x3c, 0x74, 0x44, 0xf5, 0x30, 0x13, 0xc4, 0xac, 0xbe, 0x6a, 0xf9, 0xa5, 0xab, 0xb2, 0x96, 0x82, 0xd1, 0x42, 0x45, 0x73, 0x83, 0x21, 0xd6, 0xa1, 0x33, 0x5d, 0xb2, 0xcc}}
	return a, nil
}

var _exampleConfigurdChartsMongodbHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\xc7\x36\x96\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\xdc\xb2\xc2\x0a\x24\xe4\xd2\x18\x97\xc8\x19\xe3\x2a\x69\x96\x1c\x50\xfd\x74\xf2\x81\xd5\x51\x87\x97\x28\x0a\x5d\x6b\x2d\xcd\x14\x1a\x39\x25\x84\x54\x46\x2c\xde\xa6\x28\x39\xfc\x45\xe3\xe4\x4d\xce\x8c\xea\x2d\xfe\xf0\x3e\xcf\xd4\x21\x73\xf0\x26\x25\xe3\x77\x6d\x7c\x90\x37\x9e\x71\x11\x8b\xf8\xf5\xc7\xe1\x29\xa7\x77\x94\x7c\xbb\xbc\x26\xa1\x72\x43\x92\xcc\x8e\xdc\x76\xf7\xba\xb3\xd2\x98\x3a\x6c\xca\xb2\x94\x8c\xfd\x66\x87\x59\x9a\x92\x0b\x62\xc3\x8d\xf7\x7c\x72\xe3\x47\x1b\x6e\x7c\x88\x18\x86\x2b\x1e\xa3\x9e\xf3\xf0\xfd\x68\xf4\xd3\x69\xad\x38\x48\x62\xa5\xde\xe9\xa5\x52\xef\x46\x7f\xa2\xde\xd9\x52\xa9\xff\xa4\x0e\x7b\xdf\xa4\xac\x8a\xff\xdb\x7f\x4a\xae\xb6\x72\xe4\xc9\xc8\xc9\xcc\x7e\xb8\xef\xb5\x72\x24\x77\xd6\xa9\xcc\x3c\xd0\x57\x00\x00\x00\xff\xff\xf5\x89\xaa\x2d\x56\x01\x00\x00")

func exampleConfigurdChartsMongodbHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbHelmignore,
		"example/configurd/charts/mongodb/.helmignore",
	)
}

func exampleConfigurdChartsMongodbHelmignore() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/.helmignore", size: 342, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x47, 0x51, 0x86, 0xcc, 0xba, 0xa9, 0xa0, 0xa4, 0xde, 0x5e, 0x96, 0xa5, 0xcb, 0x6d, 0xdc, 0xf9, 0xfa, 0xd0, 0xd7, 0x6b, 0xc3, 0x8e, 0x4, 0x47, 0xa, 0xc8, 0x44, 0x45, 0xb2, 0x1a, 0x16}}
	return a, nil
}

var _exampleConfigurdChartsMongodbChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe4\x4a\x2c\x28\x80\x73\x95\x0c\xf5\x0c\x94\xb8\x52\x52\x8b\x93\x8b\x32\x0b\x4a\xc0\x42\xb9\xf9\x79\xe9\xf9\x29\x49\x0a\xce\x19\x89\x45\x25\x0a\x69\xf9\x45\x0a\xce\xf9\x79\x69\x99\xe9\xa5\x45\x29\x5c\x79\x89\xb9\xa9\x70\x15\x5c\x65\x30\x53\x0c\xf4\x0c\xf5\x0c\xb8\x00\x01\x00\x00\xff\xff\x07\x6b\x00\x57\x67\x00\x00\x00")

func exampleConfigurdChartsMongodbChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbChartYaml,
		"example/configurd/charts/mongodb/Chart.yaml",
	)
}

func exampleConfigurdChartsMongodbChartYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/Chart.yaml", size: 103, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x6d, 0x8c, 0x32, 0xe6, 0x8b, 0xe, 0xf7, 0x66, 0x5e, 0xfc, 0xbb, 0x98, 0x3d, 0xe8, 0x42, 0xad, 0x73, 0x9d, 0x7e, 0xce, 0x88, 0x53, 0x4e, 0x65, 0xa8, 0xfe, 0x43, 0xb4, 0x8b, 0xb8, 0xe2}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x0f\xd1\x40\x9b\xb2\xce\xa1\xd0\xc3\x42\x4e\x69\x0f\xa5\x90\x42\x03\xe9\xb1\xc8\xf6\xa8\x3b\x20\xcb\xae\x46\xda\xee\x92\xe4\xbf\x17\x49\x8e\x77\xb7\xe0\xb2\x7b\x1b\xac\xa7\x37\x6f\xbe\x91\x9f\x9e\x6e\xae\xb1\xe5\x7e\x0d\xa1\x00\xc3\x96\xc2\x7e\xa4\xdb\x3e\x4a\xd0\xed\x86\xd6\xb8\xbe\x79\x79\xa9\x92\xaa\xfa\xbc\x1b\xb5\xeb\x10\x36\x04\xa7\x7b\xc2\x60\x72\xdd\x6e\xb4\x0f\x75\x35\xe9\x56\xe8\xc8\xb0\x23\x28\xda\xe9\x7e\xb4\x54\x27\xad\xc2\xea\x70\xaa\xa3\x0d\xa8\xef\xf2\xb5\xfb\x64\x54\x3f\x6a\x1b\x49\xb2\xf2\xdb\x96\xbc\xe7\x8e\xf0\x8c\xe0\xa3\x6b\xf1\xf1\x43\x2e\xb9\x7f\x88\xc6\xf0\x0e\x6a\x75\x30\x23\xd7\xe5\xba\xe4\xbb\xf3\xa4\x03\x41\xcf\x3d\x4c\xb4\x76\x8f\xdf\x51\x5b\x36\x4c\x1d\xf4\x38\xe6\xe4\x75\xf5\x83\x8a\x7b\xd6\x87\xd4\x23\x4d\x21\x68\xa8\xd5\x51\x08\x32\xf4\x84\xaf\xb1\x21\xef\x28\x90\x94\x79\x0d\x93\xed\x04\xda\x13\x2c\xf7\x1c\xa8\x43\x18\x10\x36\x2c\x78\xdb\xec\x33\x8b\x4f\xf7\x0f\x49\xcb\xee\x17\x64\xa4\xf6\x5d\x5d\x7d\x31\xf0\x64\x49\xcb\x04\xad\x1d\x5c\xd0\xec\xa4\x60\x2b\xdf\x38\xe0\x0f\x5b\x8b\x86\x10\x25\xe5\x14\xe8\x1c\x7e\x4a\xbb\x88\x36\x69\x4e\xf1\xb2\x99\x69\xbe\x1e\xce\x44\x5f\x35\x8b\x82\xb3\x90\x5b\x39\x38\xbd\xc9\xf1\xd7\xb7\xe7\x6f\xf5\x28\xe7\x4c\xa2\xb8\xd4\xdf\x0b\xa6\x72\x79\xce\x7a\xf2\xf5\xe2\x80\xa3\x67\x17\x0c\xd4\x95\xac\xae\x44\xfd\xe3\x56\xfa\x5e\xf2\xce\x96\xea\x93\xf7\x77\xb4\xd8\xf4\xbb\x6c\xc9\x0b\x0f\x2e\x2d\x35\x2f\x77\x7a\x29\x45\x65\x75\x43\xf6\x3f\x0b\xce\x2a\xb5\x38\xce\x31\xed\x52\x3f\x4e\xdd\x9e\xe1\x69\xb4\xba\x25\xa8\xf7\x0a\xea\xa7\xba\x68\xce\xbf\x01\x00\x00\xff\xff\xef\x62\xa1\x95\x15\x04\x00\x00")

func exampleConfigurdChartsMongodbTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplates_helpersTpl,
		"example/configurd/charts/mongodb/templates/_helpers.tpl",
	)
}

func exampleConfigurdChartsMongodbTemplates_helpersTpl() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/_helpers.tpl", size: 1045, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xb0, 0x6b, 0xd, 0x90, 0x89, 0xbb, 0x4, 0xfd, 0x26, 0xc5, 0x68, 0x60, 0x4d, 0x6a, 0x5a, 0x23, 0x70, 0x2a, 0x48, 0x23, 0x9c, 0x1d, 0x71, 0x42, 0xb, 0x6, 0x3, 0x65, 0xfb, 0xea, 0x3f}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplatesDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x6e\xdb\x3a\x10\xbc\xfb\x2b\x08\xe3\xbd\xa3\x14\xa4\xa7\x42\x40\x4f\xe9\xb1\x0d\x84\xa4\x08\xd0\xe3\x9a\x5a\x4b\x44\x48\x2e\x41\xae\x54\x18\xae\xff\xbd\xa0\x64\x2b\xa4\x1d\xdb\xa9\x51\x1e\x97\xb3\x33\xc3\x59\x52\xda\x6e\x0b\xf1\x9f\x1b\xa4\xa8\xbe\x08\xe7\x95\xe5\xb5\x58\xfe\x1f\x0a\x37\xc8\xa5\x28\x9f\x50\x23\x04\x2c\x1f\xc1\xa0\xd8\xed\x16\xe0\xd4\x0b\xfa\xa0\xc8\x56\x02\x9c\x0b\x77\xc3\xfd\xe2\x55\xd9\xa6\x12\x5f\xd1\x69\xda\x18\xb4\xbc\x30\xc8\xd0\x00\x43\xb5\x10\xc2\x82\xc1\x4a\x2c\xb7\xdb\x13\xae\xe5\x42\x08\x0d\x2b\xd4\x21\xe2\x44\xa4\x2b\x5f\xfb\x15\x7a\x8b\x8c\xa1\x54\x74\x37\xf5\xbe\xd3\x7a\x06\xef\xc0\x73\x41\xeb\xa9\xe5\x05\x74\x8f\xa1\x6c\x3d\xf5\xee\x7c\x8b\x01\x0b\x2d\x36\xc5\x6a\x93\x0b\x3d\xa3\x1f\x94\x9c\xb5\x3a\xd4\xa6\x0c\xdd\x9d\xec\xc0\xf3\xfb\xc7\x29\xd2\xda\x13\x0e\x2a\x86\x34\x1e\x33\x38\x94\xf1\x88\x1e\x9d\x56\x12\x42\xe6\x6f\x5f\x7c\xa0\xde\xf2\xa4\x16\x50\xa3\x64\xf2\x53\x2a\x06\x58\x76\xdf\x92\x98\xfe\x3e\xa8\x1b\xa2\x62\x34\x4e\x03\xe3\xde\x43\x32\xcf\xb8\x74\x66\xe7\x16\x43\x37\x4d\xef\x90\x63\x5c\x92\x2c\x83\xb2\xe8\x13\x1b\x85\xb8\x2e\x2b\x84\x32\xd0\x1e\x6e\xe4\x5e\x65\x2c\xc5\x49\x50\x50\x4c\x7e\x23\x76\xbb\xea\x64\x9b\xa1\xdd\x5f\xda\x8c\xa9\xee\xb5\xae\x49\x2b\xb9\xc9\x8c\x4f\x3d\x6e\xde\xcc\x3d\x80\x6f\x13\xdf\x71\xc5\x47\xc8\xf4\x13\x8c\x9e\x29\x22\x48\xfc\x16\x56\xd9\x06\x2d\x8b\xfb\x4f\x39\x07\xda\xe1\x2a\x05\xda\xe1\x02\x83\x23\xcf\x47\x36\x0e\x11\xce\xf1\x16\x11\x94\x41\x92\xec\x6b\x8a\x8f\x21\x39\x75\x98\x5e\x4d\x99\x21\x72\xd1\x51\xd8\x13\x93\x24\x5d\x89\x1f\x0f\x75\xb2\xa7\xd5\x80\x16\x43\xa8\x3d\xad\x30\x37\xc6\xd2\x3d\x93\x7c\x45\xae\x8e\xb9\x46\x0f\x67\xfd\x7a\x84\x46\xfd\x73\xce\x40\xbd\x97\x78\x7d\x84\x33\xf2\xc2\x14\x06\xd2\xbd\xc1\xef\xf1\xfd\x67\x84\x91\xce\x83\x6d\x71\x66\x4b\x91\xc7\xa1\xa6\x77\xdf\x9e\xdc\xf9\xb8\x4c\xec\xab\x81\xbb\x09\xe4\x80\xbb\x1c\x14\x05\xd1\x36\x6f\xc5\x49\x6f\x36\xf5\x71\x43\x97\xcd\xb8\xf8\xff\x08\x8c\x96\x5f\xc6\xfe\x07\x0d\xca\xe4\x51\xca\x58\x7a\x3c\x70\x8c\x3f\xa7\x99\xe2\xc4\x66\x2c\xfc\x52\xdc\xcd\xb6\x2c\x35\xf8\xbc\xff\x88\xbe\xc1\xd2\xea\x9b\x5a\x3a\xb4\x64\x48\x9f\xcf\xea\x9d\xa8\xc1\x7a\xad\xac\xe2\xe4\x85\x1f\x2a\x1f\x57\xb9\xa6\xc1\xa4\xd1\x03\x2b\xb2\x49\xce\x49\xf1\x26\xa5\x3f\x01\x00\x00\xff\xff\xb9\xc8\x82\x07\xf8\x07\x00\x00")

func exampleConfigurdChartsMongodbTemplatesDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplatesDeploymentYaml,
		"example/configurd/charts/mongodb/templates/deployment.yaml",
	)
}

func exampleConfigurdChartsMongodbTemplatesDeploymentYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplatesDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/deployment.yaml", size: 2040, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xfc, 0x9e, 0xf9, 0x19, 0x24, 0x51, 0x2e, 0x62, 0x11, 0xc6, 0xdb, 0x35, 0xc9, 0x77, 0xb0, 0x75, 0x66, 0xd8, 0x17, 0xe9, 0x83, 0xdc, 0x52, 0x82, 0xea, 0x6a, 0x86, 0x26, 0xa2, 0xa8, 0xf7}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplatesPvYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcf\x6a\xf3\x30\x10\xc4\xef\x7e\x8a\x25\x77\x2b\x7c\xf0\x9d\x7c\xed\xb9\x21\xa4\x10\xe8\x71\x23\x6f\x63\x11\xfd\x43\xbb\x76\x49\x5d\xbd\x7b\x51\x15\xda\x24\xd4\xb9\x49\xcb\x6f\x66\x76\x16\xa3\xd9\x53\x62\x13\x7c\x07\xd3\xbf\xe6\x64\x7c\xdf\xc1\xb6\x4c\x58\xc8\xcb\x3e\xd8\xd1\x51\xe3\x48\xb0\x47\xc1\xae\x01\xf0\xe8\xa8\x83\xd5\x3c\x83\xda\x91\x25\x64\x52\x1b\x74\x04\x39\xb7\x71\x5a\x35\x00\x16\x0f\x64\xb9\xa0\x00\x18\xa3\x3a\x8d\x07\x4a\x9e\x84\x58\x99\xb0\xae\xf2\x3f\xd4\x0b\x7c\xc4\x24\x6d\x78\xab\x92\x3d\xda\x91\x58\x1d\x53\x18\xe3\xb2\xc4\xa1\xc7\x23\xf5\xed\xe1\x7c\x1b\xf4\x42\x69\x32\xfa\x27\x6b\x20\xeb\x14\x0f\x6b\x3d\x60\x92\x85\x46\xd7\xb3\x1d\x4d\xa6\x1c\x0a\x72\x5e\x35\x1c\x49\x97\x8a\x2c\x21\xe1\x91\x9e\x2c\x32\x6f\xbe\xab\x39\xf4\x23\xda\x06\x40\x63\x44\x6d\xe4\x5c\x2f\x71\x01\x6f\x7a\xc4\xbb\x3b\x2b\x36\x1f\x97\xf5\xe6\xb9\x85\x77\x23\xc3\x32\x8b\x5a\x13\xf3\x73\xe8\x89\xab\xe4\x6a\x50\x23\x8b\x87\x84\x57\x74\x16\x14\x7c\x82\x37\xbe\x27\x2f\xf0\xff\x37\x81\x7c\x5f\x3f\xf7\xee\x3b\xd2\x16\x8d\xdb\x06\x6b\xf4\xf9\xf1\xce\x37\x68\x75\x1b\x02\xcb\x16\x65\xa8\x6b\xc4\xf2\x7a\x68\x51\x08\xc8\xf9\x2b\x00\x00\xff\xff\xfa\x56\x65\xfa\x8c\x02\x00\x00")

func exampleConfigurdChartsMongodbTemplatesPvYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplatesPvYaml,
		"example/configurd/charts/mongodb/templates/pv.yaml",
	)
}

func exampleConfigurdChartsMongodbTemplatesPvYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplatesPvYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/pv.yaml", size: 652, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x7c, 0xcd, 0xd9, 0x94, 0xbf, 0xcd, 0xd1, 0x8f, 0x7f, 0xed, 0xb0, 0xa7, 0x7d, 0x50, 0x97, 0xed, 0x8, 0xda, 0x83, 0x51, 0xc8, 0x29, 0x4b, 0x1c, 0x60, 0x30, 0x5f, 0xbb, 0x67, 0x24, 0x67}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplatesPvcYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcf\x4e\xf3\x30\x10\xc4\xef\x79\x8a\x55\xef\x71\xf5\x49\xdf\x29\x57\xce\x54\xa8\x48\x95\x38\x6e\x9d\xa1\xb1\xea\x7f\x78\xed\x20\x08\x79\x77\xe4\x06\xaa\x16\xe8\x71\xd7\x33\xde\x99\x1f\x47\xb3\x43\x12\x13\x7c\x47\xe3\xbf\xe6\x68\x7c\xdf\xd1\x43\xdd\x48\x86\xcf\xbb\x60\x8b\xc3\x9d\x65\xe3\x1a\x87\xcc\x3d\x67\xee\x1a\x22\xcf\x0e\x1d\xad\xa6\x89\xd4\x16\x16\x2c\x50\x1b\x76\xa0\x79\x6e\xe3\xa8\x57\x0d\x91\xe5\x3d\xac\x54\x2d\x11\xc7\xa8\x8e\x65\x8f\xe4\x91\x21\xca\x84\xf5\xe2\xff\xc3\x7e\x43\x1f\x39\xe5\x36\x3c\x2f\x96\x1d\xdb\x02\x51\x87\x14\x4a\xbc\x6d\x71\xec\xf9\x80\xbe\xdd\xbf\x5d\x1f\x7a\x44\x1a\x8d\x3e\xdf\x1a\x60\x9d\x92\x61\xad\x07\x4e\xf9\x46\xa5\xcb\xdd\x16\xa3\xa9\xb8\x68\x9e\x57\x8d\x44\xe8\x5a\x51\x72\x48\x7c\xa8\x9c\x44\x36\xa7\x6a\x8e\x7d\x61\xdb\x10\x4d\x53\x4b\xaf\x26\x0f\xe7\xd8\xf1\x07\x5c\xc5\x5a\x43\xe4\x3e\xf4\x90\x25\xd4\xc5\x62\xe1\x57\xff\xc8\xe1\x89\x9d\x25\x45\x1f\xe4\x8d\xef\xe1\x33\xfd\x5f\xe4\xf5\x15\xbe\x5f\x86\x04\x09\x25\xe9\x6f\x67\xc2\x4b\x81\xe4\xaf\xe9\x1c\xf4\x8a\xe3\xaf\x40\x62\xde\x4f\x78\x3e\x03\x00\x00\xff\xff\xa0\x91\xbb\xc9\x1c\x02\x00\x00")

func exampleConfigurdChartsMongodbTemplatesPvcYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplatesPvcYaml,
		"example/configurd/charts/mongodb/templates/pvc.yaml",
	)
}

func exampleConfigurdChartsMongodbTemplatesPvcYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplatesPvcYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/pvc.yaml", size: 540, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0x47, 0x1c, 0x75, 0x65, 0x71, 0x65, 0x69, 0x70, 0x5e, 0xcb, 0xf9, 0x96, 0x31, 0xb8, 0xc0, 0xb8, 0xa2, 0x61, 0xba, 0x8, 0xaa, 0x39, 0xbd, 0xd7, 0x20, 0xf, 0x2b, 0xe9, 0x1a, 0x8e, 0x2c}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplatesServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x4d\x6a\xc3\x30\x10\x46\xf7\x3e\xc5\x90\xbd\x15\xba\xd5\x21\x4a\x49\x21\xfb\xb1\xfc\x35\x16\xd1\x1f\xa3\xb1\x21\x04\xdd\xbd\xb8\x4e\xa1\x01\xb7\x8b\x2e\x25\xbd\x87\xe6\x0d\x17\x7f\x86\x54\x9f\x93\xa5\xe5\xa5\xbb\xfa\x34\x5a\x7a\x87\x2c\xde\xa1\x8b\x50\x1e\x59\xd9\x76\x44\x89\x23\x2c\xdd\xef\x64\x4e\x08\xe0\x0a\xf3\xca\x11\xd4\x5a\x47\x14\x78\x40\xa8\x2b\x45\xc4\xa5\x98\xeb\x3c\x40\x12\x14\xd5\xf8\x7c\xfc\xcb\xdc\xe3\x0b\x8b\xf6\xf9\x63\x53\xce\x1c\x66\x54\x73\x91\x3c\x97\xdf\x95\xc8\x89\x2f\x18\xfb\xe1\xf6\xfc\xd1\x23\xe4\x5b\x9c\x10\xa2\xa9\xd3\xd1\x4d\x2c\x6a\xe9\xb0\x33\x53\xff\xf3\xee\x84\xc5\xaf\xab\xa1\xd6\x0e\x5d\x2d\x70\x6b\x62\x45\x80\xd3\x2c\xff\xc9\xd5\x5b\xc1\x53\x57\xdd\x06\x34\xeb\xc3\x86\x94\x2c\xfa\x58\x65\xff\x75\xd8\xe5\x5d\x4e\xca\x3e\x41\xde\xb2\x28\xb5\xf6\x19\x00\x00\xff\xff\xc8\x45\x56\x21\xc7\x01\x00\x00")

func exampleConfigurdChartsMongodbTemplatesServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplatesServiceYaml,
		"example/configurd/charts/mongodb/templates/service.yaml",
	)
}

func exampleConfigurdChartsMongodbTemplatesServiceYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplatesServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/service.yaml", size: 455, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x8, 0x3c, 0x7c, 0xc, 0x60, 0x8c, 0x5e, 0x7f, 0x38, 0xad, 0xeb, 0x2e, 0xed, 0xca, 0xc4, 0xd7, 0x3f, 0x8a, 0x26, 0xd7, 0x7f, 0x3f, 0xe4, 0x65, 0x2, 0xd2, 0xa6, 0xe1, 0xeb, 0xb0, 0x78}}
	return a, nil
}

var _exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\x91\x4b\x4f\x71\xd9\xd5\x0f\x51\xca\x06\xbd\x94\x1d\x14\x47\x4b\x4c\x6d\x39\x58\x4a\xd7\x52\xf2\xee\xc3\x69\xc6\x36\xd6\xb1\xeb\x2f\x7d\xbf\xf4\x4b\x38\xfa\x03\x65\xf1\x89\x2d\x9c\x9f\xaa\x93\xe7\xce\xc2\x3e\x75\x55\x24\xc5\x0e\x15\x6d\x05\xc0\x18\xc9\x42\x7d\xbb\x81\x67\x17\xa6\x8e\xa0\xa6\x0b\xc6\x31\x90\x79\x9b\x42\x28\xe5\x1a\x0c\xcc\x73\xa3\x24\xda\xb8\xc4\x4c\x4e\x7d\xe2\xba\x02\x08\xd8\x52\x90\x62\x03\x80\xe3\x68\x4e\x53\x4b\x99\x49\x49\x8c\x4f\xdb\xbb\xf5\x23\xe7\x2f\xd7\x05\x1d\x28\x44\x23\xc3\xd6\x0d\x98\xf5\x31\xb1\x94\xbe\x21\xbf\xa7\x79\x16\x45\x76\xf7\x89\xe6\x99\x02\xa1\x90\xd9\x61\xa4\xbf\x99\x88\x8c\x3d\x75\x4d\x7b\xfd\x49\xbd\x50\x3e\x7b\xb7\x82\xc8\x9c\x14\x4b\xe4\x35\x69\xfd\xb9\xef\x90\xd2\xa9\xb6\xb0\x1c\x46\x26\xe7\x48\xa4\x92\x91\x5c\x69\x73\x89\x15\x3d\x53\x5e\xa1\x66\xbd\xf4\x7b\x4f\xba\x08\x00\x3e\x62\x4f\x16\xda\x49\xae\x6d\xba\xac\xa2\x4b\x31\x62\x79\xd4\x71\x53\x5a\x37\xaf\xab\x8e\xb9\x17\x0b\x70\xdc\xfc\xff\x29\x5b\xa2\x1c\x30\x4c\x24\x46\xee\x49\xcc\x98\xb2\xc2\x3c\x2f\x76\x99\x44\x31\xeb\x3e\x05\xef\xae\x16\x76\x74\xa6\x5c\x7d\x04\x00\x00\xff\xff\xc5\xf1\x40\xab\x2d\x02\x00\x00")

func exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYaml,
		"example/configurd/charts/mongodb/templates/tests/test-connection.yaml",
	)
}

func exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/templates/tests/test-connection.yaml", size: 557, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x1e, 0x76, 0x8c, 0xa3, 0xb5, 0xf5, 0xe1, 0x31, 0x77, 0x28, 0xd9, 0x4c, 0x67, 0xce, 0x75, 0x37, 0x1c, 0x5c, 0xb8, 0xc3, 0xbc, 0x22, 0x1c, 0x4, 0xa, 0x5d, 0xab, 0xfb, 0xdd, 0x92, 0x7e}}
	return a, nil
}

var _exampleConfigurdChartsMongodbValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4f\x6f\xdc\xb6\x13\xbd\xf3\x53\x0c\xd6\x87\x5c\xec\xb5\xd7\x97\xfc\x20\x20\x07\x23\xfe\x35\x08\xe0\x7f\x88\xdd\x06\x45\x90\xc3\x2c\x35\x5a\x4d\x4b\x71\x54\xce\x70\x1d\xb5\xe8\x77\x2f\x48\x69\x6d\x37\xce\xa1\x27\x51\xd2\xe3\xf0\xcd\xe3\x7b\x73\x04\x97\xd4\x61\x0e\x06\x7b\x0c\x99\x14\x3a\x49\x60\xa4\xb6\x76\x47\xf0\xd0\xb3\x02\x2b\x20\xfc\x7a\x71\x7d\x75\xd2\x49\x1a\xd0\x8c\x5a\xe8\x38\x50\x01\x5c\x92\x0f\x98\x08\xf6\x98\x18\xb7\x81\x14\x4c\x60\x4b\x30\xa2\x2a\xb5\xc0\xd1\x04\x26\xc9\xa5\xe2\x30\x06\x34\xd2\xb5\x73\x89\xc6\xc0\x1e\xdf\x4b\x8e\xd6\xc0\xc6\x39\x1e\x70\x47\x8d\x03\x48\x34\x8a\xb2\x49\x9a\x1a\x88\x3b\x8e\xdf\x1c\x80\xe1\xae\x81\xba\xd5\x1c\xc0\x98\x43\xb8\x93\xc0\x7e\x6a\xe0\x63\x77\x23\x76\x97\x48\x29\xda\x52\xe4\x2e\x87\x70\x4f\x3e\x91\x69\x03\x5f\xbe\xba\x88\x03\xdd\xee\x29\x25\x6e\xa9\x81\xd5\xca\x75\x39\x84\x57\x1f\x9d\x52\xda\xb3\xa7\x0b\xef\x2b\x27\x07\x70\x04\xf7\x23\x79\xee\x98\x14\x1e\x7b\xb2\x9e\x12\x20\x2c\x38\xc0\x19\x08\xda\x4b\x0e\x6d\x69\xd8\x27\x42\xa3\xd6\xc1\xb2\x6a\xc0\x52\xa6\x5a\xe8\x22\x46\x31\x34\x96\x58\xd5\xc1\xb6\x2d\x0f\xeb\xe9\xfb\x72\x0e\x00\x9f\xb1\x0d\xfc\xf5\x77\xdd\xff\xd0\x13\x14\xca\x20\xdd\x8f\x76\x95\x62\x59\x69\x5d\xb1\x1f\x3b\x88\x62\xa0\x64\x80\xb1\x5d\xb8\x94\x1b\x2c\x6c\x8e\x01\xe7\x42\xac\xb0\xa3\x48\xa9\x30\x86\xac\x1c\x77\xb5\xf0\x41\x9b\xa7\xcb\x72\x50\xf1\x8d\x73\xa3\xb4\xf7\xe4\x73\x62\x9b\xde\x4b\x34\xfa\x66\x4f\xf4\x3a\xfd\x90\x24\x8f\x0d\x9c\x9f\x9d\x9d\x15\x29\x7f\x0c\xf3\x38\xe2\x96\x03\x1b\x93\xce\x02\x03\xb4\x49\xc6\xc3\xfa\x04\x2e\xae\xae\xea\x3a\x11\xb6\xb7\x31\x4c\x9f\x44\xec\x27\x0e\xa4\x93\x1a\x0d\x2f\x04\x4d\x39\x5e\xe8\x8d\xc4\x02\xf8\xfe\xf3\xcf\x4a\xa9\x81\xcd\x42\xa5\x0a\x55\x4e\xb0\x69\xa4\x06\x6e\xa4\xa5\x3b\x49\x45\x68\x2f\xd1\x90\x23\xa5\xf2\xde\xc0\xf9\xdb\xb3\xcd\x5b\xe7\x76\x73\x27\xd5\x6b\x8e\xe2\xbe\x7a\xa8\xd4\x3e\x99\x85\x80\x87\xff\xdf\x3f\x2c\x84\x6b\x5c\x1a\x58\x15\xf0\xca\x39\x4c\x3b\x7d\x01\x5f\x61\xda\x6d\xde\xbd\x93\x48\x2b\xe7\x46\x4a\xca\x6a\x14\xed\x17\x09\x79\xa8\x8c\x94\xff\xa4\x06\x36\x1f\xb8\x98\x1a\xad\x6f\xe0\xd4\x86\xb1\x66\xc0\x07\xe4\xe1\x60\xf2\x4b\x0a\x54\x6f\x02\xbd\x27\xd5\x6b\x69\x67\xfd\x8a\x62\x9f\x08\xdb\xcf\x89\x8d\x6e\xa3\x27\xe7\xf6\xb5\xf8\x75\x31\x45\x85\x1c\x48\xb7\x68\x58\x77\x2c\xe7\x94\xf7\xd3\x76\xeb\x1c\xc7\x5d\x22\xad\xd8\xd7\xc6\x2b\x7d\xfc\x9e\xb7\x94\x22\x95\xd8\xb2\x9c\x2e\xf0\xb5\x0f\xa8\xfa\x1c\xd0\xd7\x40\x0b\x7a\x82\x7e\xa8\xea\xa4\x4c\x2b\x07\xd0\x8b\x5a\xcd\xda\x81\x45\x5d\x6a\x8d\xea\x4d\x65\x59\x72\x98\x48\x25\x27\x4f\xcf\xe6\xff\x4c\x90\x35\x63\x08\x53\x11\x46\x86\x81\x62\x5b\x2d\x6e\x02\x5a\x13\x3a\x41\xbb\x0c\xb0\xa7\xdd\xd5\xfb\x26\x10\x08\xf7\x04\x56\x86\x18\x96\x21\xe6\x25\xaa\x67\xc9\x3a\x3b\xb2\x97\x12\xa3\x3a\xef\xfa\x72\x0c\xa5\xf5\x3c\xf1\x30\xa8\x00\xc7\x92\x1e\x25\x05\xdf\x63\xf4\xf3\x33\x99\x16\x9f\x81\x44\xa0\xb8\xe7\x24\x71\xa0\x68\x0a\x8f\x6c\x3d\x04\x36\x0b\x8b\x17\x0f\x54\x8e\x41\xb3\xef\xcb\xf1\xd7\x1c\xb9\xc8\xb4\x2e\x21\x9d\x24\x43\x2b\xf0\x88\xf1\x5f\x9d\xbc\xd8\x96\xe3\xdc\xad\xcd\xd1\x94\x10\xe4\x91\xe3\xae\x56\x0f\x1c\x0b\x04\xdb\xdf\xb2\xd6\xff\x43\x39\x20\x52\x31\x08\xa6\xe9\xb8\xf6\x9f\x68\x90\xda\x3d\x81\xcf\x29\x4c\xb0\x4d\x58\xb5\xe9\x8c\x12\xbc\x79\x96\xfa\xcd\x7a\x29\x3a\xb0\x3d\x45\xd3\x8f\xb9\xc6\x68\x58\xde\x07\x1a\xea\x54\xde\x9c\xff\xef\x9a\x97\x16\xff\xc8\xa4\xff\x75\x87\x8b\xd2\xd2\x3d\x05\xf2\x26\xa9\xde\xae\x33\x09\x65\x04\xcd\x96\xfb\xf2\xd5\x39\xec\x3a\x8e\x6c\x53\xfd\xfd\x4f\x00\x00\x00\xff\xff\x54\x08\x92\x59\x98\x06\x00\x00")

func exampleConfigurdChartsMongodbValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdChartsMongodbValuesYaml,
		"example/configurd/charts/mongodb/values.yaml",
	)
}

func exampleConfigurdChartsMongodbValuesYaml() (*asset, error) {
	bytes, err := exampleConfigurdChartsMongodbValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/charts/mongodb/values.yaml", size: 1688, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0x5d, 0x9f, 0xa8, 0x37, 0x58, 0x42, 0xfb, 0xe8, 0xf1, 0xce, 0x29, 0x7c, 0x11, 0x45, 0x10, 0xc9, 0xc6, 0xb3, 0x2f, 0x1f, 0xfa, 0xa0, 0xeb, 0x9f, 0x1d, 0x82, 0xf3, 0xb5, 0x8a, 0xad, 0xba}}
	return a, nil
}

var _exampleConfigurdNamespacesLocalHelloGroupYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x90\xc1\x4e\xc6\x20\x10\x84\xef\x7d\x8a\xc9\x7f\xaf\x78\x34\x24\xbe\x83\xaf\x80\xb8\xc2\x1a\xca\x92\x85\xf6\xf9\x0d\xe2\xff\xa7\xf4\xea\xc5\x3d\xb5\xf3\x2d\x03\x33\x41\x65\x2f\x76\x01\x2a\xe9\xc1\x9e\x6a\xff\x06\x22\xa5\x24\xeb\xaf\x36\x24\x40\x0e\x52\xe5\x8f\xfb\x4e\x1f\xa7\xe1\xf4\x07\xac\xb8\xad\x6b\x50\xa2\xc6\x39\xbc\x46\x8a\x74\x7b\xd0\x8b\x5b\x1f\x2f\xb9\x39\xce\xa4\x6f\xa2\xcd\xe2\xe5\xf9\xc4\xca\x55\xe2\x1c\x94\xea\x74\x5d\x94\xda\x26\xa1\xbf\x20\xbb\x8d\x2c\x92\x78\x97\x3a\x9f\x28\x50\x5c\x8b\x16\xe6\x1e\xd7\xfc\x24\x7d\xec\x1c\x92\xf6\x8d\x2e\x91\x86\xa1\x97\xfc\xc9\x61\x72\xeb\xf6\x16\x4f\xc6\x95\x92\xd8\xbb\xc6\x92\x27\xbe\xc9\x9e\x9b\x85\x19\x47\xcd\x68\x96\xff\x5e\xab\xe3\x7f\xdf\x2a\x2f\x5f\xf2\x5e\xed\xf2\x1d\x00\x00\xff\xff\x61\xde\x21\x99\x60\x02\x00\x00")

func exampleConfigurdNamespacesLocalHelloGroupYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdNamespacesLocalHelloGroupYml,
		"example/configurd/namespaces/local/hello-group.yml",
	)
}

func exampleConfigurdNamespacesLocalHelloGroupYml() (*asset, error) {
	bytes, err := exampleConfigurdNamespacesLocalHelloGroupYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/namespaces/local/hello-group.yml", size: 608, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0x64, 0xf3, 0x23, 0x1e, 0x9f, 0xc, 0x97, 0x1e, 0xce, 0xe6, 0x1f, 0x3a, 0x5a, 0x61, 0x55, 0xa, 0xdf, 0x51, 0x3a, 0x60, 0x9d, 0xb8, 0xd2, 0x5c, 0xff, 0x8, 0xdb, 0xf3, 0x47, 0xa5, 0x79}}
	return a, nil
}

var _exampleConfigurdNamespacesLocalMongodbGroupYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\xb1\xca\xc2\x40\x10\x04\xe0\xfe\x7f\x8a\x79\x81\xf0\x63\x7b\xb5\x60\x25\x8a\x85\xd6\xe7\xdd\x10\x17\x2e\xd9\xb0\x7b\x09\xe8\xd3\x4b\x50\xf1\x9c\x6a\xf9\x66\x61\x7a\xd3\x79\x0a\x7f\x80\xd3\x16\x49\xf4\xf5\x06\x06\x1d\x7b\xcd\xd7\xee\xad\x2f\x04\x74\xa1\x99\xe4\xcf\xd7\x9a\x89\xe6\xe2\x95\x63\x3d\x6b\x99\x07\x7e\x1b\xc0\xe5\xc1\x80\xcd\x4e\x1a\x9b\x62\xbd\x05\xfc\xe7\x58\x63\xa3\xc6\x54\xa2\x0c\x47\x2d\x92\xee\x01\x5b\x16\x56\x36\x7d\x4c\x89\xee\x7b\xfd\x99\x5e\xd3\xe1\xc4\x98\x2f\x26\x95\x87\x31\xf1\x19\x00\x00\xff\xff\xc8\x43\x40\x51\xcf\x00\x00\x00")

func exampleConfigurdNamespacesLocalMongodbGroupYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdNamespacesLocalMongodbGroupYml,
		"example/configurd/namespaces/local/mongodb-group.yml",
	)
}

func exampleConfigurdNamespacesLocalMongodbGroupYml() (*asset, error) {
	bytes, err := exampleConfigurdNamespacesLocalMongodbGroupYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/namespaces/local/mongodb-group.yml", size: 207, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xdf, 0x11, 0x85, 0x6d, 0xbc, 0xda, 0xaa, 0x8e, 0xd3, 0x28, 0xe9, 0x8b, 0xca, 0x50, 0x6c, 0xdc, 0x23, 0x71, 0xa, 0x73, 0xe1, 0x70, 0xc6, 0x68, 0xed, 0xfa, 0xe3, 0x6d, 0xad, 0xd0, 0xac}}
	return a, nil
}

var _exampleConfigurdServicesExampleYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xc1\x8e\xdb\x30\x0c\x44\xef\xfe\x8a\x41\x7c\x68\x0b\x34\x6e\xb3\x47\xff\x8d\x2c\x8e\x2d\x62\x6d\x29\xa0\x98\x04\xf9\xfb\x85\xad\x6c\x80\x3d\x09\xe2\x70\xe6\x91\xac\xb4\xbb\x46\x8e\x1d\xa0\x5b\x58\x38\xb6\xe7\x9c\xc3\x46\xf4\xa8\x57\x46\x9d\x95\x15\x9e\xd8\x24\x1c\x92\xa7\xe0\x78\xe8\xba\x62\x22\x6e\x95\x82\x47\x62\x46\x10\x31\xd6\xaa\x79\x81\x27\xad\x78\xc5\x77\x80\x87\x65\xc4\x65\xb8\x7c\x0c\xff\xd1\xa3\x5c\x5d\x4b\x0e\xeb\x00\x9d\x91\x8b\xbf\x41\xf2\x17\xea\xbf\x2a\xca\x9d\x66\x2a\xcc\x98\x9e\x38\x3b\xae\xc1\xc2\x46\xa7\x0d\xdf\xad\x71\x8f\x84\x97\x9d\x8e\x87\x7a\xfa\x41\xdc\x73\xd5\x91\x49\xa9\x7b\xd3\x44\xa4\x60\x82\x58\x84\xd2\x01\xd3\x4d\x57\x19\x71\x92\x12\x3f\x69\xed\x8b\xe1\x84\x1e\xb1\x6c\x5b\xc8\xd2\x96\xda\x9d\x87\x74\x64\xb7\xfd\x7f\xef\x23\x93\x42\xf9\xd3\x01\x31\x05\xf3\xf1\x8d\xed\x5b\xe1\x85\x6c\x87\x79\xcf\x76\xf8\x07\x18\x67\x1a\x73\x6c\x57\x22\x62\xc9\xb3\x2e\x37\x93\x7f\x87\xb7\x42\xd4\x18\xbd\xd8\xf3\x2b\x00\x00\xff\xff\xc1\xfb\x48\x5d\x9e\x01\x00\x00")

func exampleConfigurdServicesExampleYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdServicesExampleYml,
		"example/configurd/services/example.yml",
	)
}

func exampleConfigurdServicesExampleYml() (*asset, error) {
	bytes, err := exampleConfigurdServicesExampleYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/services/example.yml", size: 414, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x9d, 0x7e, 0xfc, 0x41, 0x14, 0xb8, 0x20, 0x5, 0xe8, 0xbf, 0xeb, 0x1f, 0xa5, 0x3, 0x70, 0x92, 0xdc, 0xb7, 0xbf, 0x86, 0xc, 0xae, 0xc, 0x5, 0xb4, 0xa4, 0xd4, 0x84, 0x45, 0x4a, 0x3b}}
	return a, nil
}

var _exampleConfigurdServicesHelloServiceYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc7\x31\x0e\xc2\x30\x0c\x05\xd0\x3d\xa7\xf8\xea\x8e\xba\xfb\x36\xc6\x71\x1b\x0b\x27\x8e\x4c\x82\x38\x3e\x03\xe3\x7b\x6b\x7e\x4c\x94\x0a\x60\x9d\x6f\x25\x5c\x11\x3d\x4e\x89\x71\xd9\xbd\xb3\x3e\x9a\xba\x47\x01\xa4\x71\x2e\x82\x7e\xb9\x4f\xd7\x02\x3c\xb7\x79\x25\x1c\x35\xe4\xa5\xf9\x27\x78\x4e\x37\xe1\x65\x31\xce\xe3\x17\x00\x00\xff\xff\xaf\x02\x96\x54\x5d\x00\x00\x00")

func exampleConfigurdServicesHelloServiceYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdServicesHelloServiceYml,
		"example/configurd/services/hello-service.yml",
	)
}

func exampleConfigurdServicesHelloServiceYml() (*asset, error) {
	bytes, err := exampleConfigurdServicesHelloServiceYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/services/hello-service.yml", size: 93, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x48, 0xd4, 0x75, 0x42, 0x92, 0x53, 0x74, 0x4f, 0x5f, 0xd8, 0xaa, 0xfa, 0xcb, 0x22, 0x4a, 0x6c, 0x3c, 0xea, 0x83, 0x95, 0x5f, 0xff, 0x4d, 0x65, 0x56, 0x42, 0xf4, 0x59, 0xce, 0xf4, 0x35, 0xbc}}
	return a, nil
}

var _exampleConfigurdServicesHiServiceYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc7\x31\x0e\xc2\x30\x0c\x05\xd0\xdd\xa7\xf8\xea\x8e\xba\xfb\x36\xc6\x71\x1b\x8b\x24\x8e\x4c\x82\x38\x3e\x03\xe3\x7b\x5b\x7e\x5c\x8d\x09\xf0\x2e\xb7\x31\xae\x88\x1e\xa7\xc6\xb8\xfc\xde\x59\x1e\xd5\x09\xd0\x2a\xb9\x18\xf6\x95\x3e\x9b\x11\xf0\xdc\xde\x0a\xe3\x28\xa1\x2f\xcb\x3f\x21\x73\x36\x57\x59\x1e\xe3\x3c\xe8\x17\x00\x00\xff\xff\x83\x37\x6b\x68\x5b\x00\x00\x00")

func exampleConfigurdServicesHiServiceYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdServicesHiServiceYml,
		"example/configurd/services/hi-service.yml",
	)
}

func exampleConfigurdServicesHiServiceYml() (*asset, error) {
	bytes, err := exampleConfigurdServicesHiServiceYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/services/hi-service.yml", size: 91, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0x69, 0x9, 0xe4, 0x7d, 0x82, 0xce, 0x90, 0x83, 0x53, 0xbb, 0xb3, 0xba, 0x8, 0x4b, 0x40, 0x58, 0x82, 0x28, 0x95, 0xd9, 0x0, 0xce, 0xd0, 0x9, 0x7a, 0xc1, 0xa5, 0x7d, 0x7b, 0xb2, 0xbc}}
	return a, nil
}

var _exampleConfigurdServicesMongodbServiceYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\x2d\x2a\xcb\x4c\x4e\xb5\xe2\x52\x50\xc8\xcc\x4d\x4c\x4f\xb5\x52\xc8\xcd\xcf\x4b\xcf\xe7\x52\x50\x48\xce\x48\x2c\x2a\x81\x72\x53\x92\xb8\x00\x01\x00\x00\xff\xff\x58\x47\xc0\x77\x29\x00\x00\x00")

func exampleConfigurdServicesMongodbServiceYmlBytes() ([]byte, error) {
	return bindataRead(
		_exampleConfigurdServicesMongodbServiceYml,
		"example/configurd/services/mongodb-service.yml",
	)
}

func exampleConfigurdServicesMongodbServiceYml() (*asset, error) {
	bytes, err := exampleConfigurdServicesMongodbServiceYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "example/configurd/services/mongodb-service.yml", size: 41, mode: os.FileMode(0644), modTime: time.Unix(1591775975, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0xf8, 0x34, 0xf0, 0xdb, 0x4b, 0x50, 0x86, 0x93, 0x86, 0xa3, 0x29, 0xc0, 0xbc, 0xb5, 0x88, 0xa, 0x3e, 0x16, 0x41, 0x4f, 0x70, 0xc8, 0xa3, 0x45, 0x2c, 0x24, 0x2e, 0x6f, 0xbf, 0xd3, 0xc4}}
	return a, nil
}

var _dummyDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xc9\xb1\x8a\x83\x30\x1c\x07\xe0\x3d\x4f\xf1\xbb\x70\xe3\x79\x11\x0e\x6e\xa8\x74\x70\xb0\xe2\xa0\x96\x60\x87\x52\x3a\x68\xf2\x27\x11\x12\x53\x6a\xb4\xf4\xed\x8b\xed\xf2\x2d\x5f\x2e\x4b\x54\x75\x5e\x16\x7b\x13\x5c\x3f\x99\x9d\xeb\x23\xcd\x91\x1d\x64\x5b\xe3\xfb\x3d\x8c\xc9\x53\x03\x13\x60\x28\xc2\x8c\xd1\x2e\xc3\xaf\x0a\x5e\x98\x90\x68\x72\x2b\x89\x8f\xca\x6b\xa1\xdd\xca\x58\xd1\x74\xf2\x7c\x6c\xab\xa6\xc3\x85\x8b\x61\x9c\xc4\x6c\xf9\x0f\x78\xa2\x36\x1f\x76\x74\x84\x78\x5f\x28\x83\x0e\x20\x65\x03\xf4\xe2\xfd\xf3\x2b\xc3\xec\x88\x6e\xf8\xfb\x4f\xd3\xed\x26\xe2\xd7\x57\x00\x00\x00\xff\xff\xdc\x9d\x89\x8e\x9f\x00\x00\x00")

func dummyDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_dummyDockerfile,
		"dummy/Dockerfile",
	)
}

func dummyDockerfile() (*asset, error) {
	bytes, err := dummyDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dummy/Dockerfile", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1592293729, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0xc, 0x19, 0x92, 0x96, 0xad, 0xb, 0x64, 0xe0, 0x7e, 0xe2, 0x90, 0x97, 0x6b, 0xf5, 0xa3, 0x25, 0x71, 0x3f, 0x12, 0xec, 0x77, 0xfa, 0xbc, 0x65, 0xae, 0xa5, 0xb3, 0xb7, 0xa8, 0x89, 0x38}}
	return a, nil
}

var _dummyDeploymentPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x3d\x6e\xc3\x30\x0c\x85\x77\x9f\x82\xf0\xee\x0e\xfd\x59\xbc\x66\x69\x81\xa6\xf0\xd0\x0b\x30\x16\x11\x1b\x90\x44\x41\xa2\xbd\x04\xbe\x7b\x21\xcb\x56\xe4\x22\x4b\x34\x89\x7c\xd2\xc7\xf7\x58\x05\x47\x7d\x5b\x01\x08\x19\xa7\x51\x28\xde\x01\x0c\x09\x2a\x14\x4c\x15\x80\xc6\x0b\xe9\xb0\x57\x00\xb7\x1b\xbc\x74\x28\xfd\x40\xea\x3b\x4a\x3f\x68\x08\x96\xa5\x85\x5a\xfc\x44\xf5\xfa\x6e\x27\xc7\xd3\xb3\x15\x1c\x2d\xf9\xcc\x68\xc0\xa2\xa1\x76\x25\x9d\x76\x75\xc3\xe4\x31\xa3\xc1\xeb\xf6\xe6\x2b\x5e\x4b\xad\x67\x63\xd0\xaa\xbb\x27\xf4\xd7\xc2\xa1\x1e\x67\xb2\x14\x42\xe7\xf9\x42\xf7\xb6\x27\x54\xe3\x83\xfe\xcc\x7a\x32\x74\xe6\xc9\x4a\x01\x89\x36\x4d\xec\x75\x28\x43\xf2\x71\xde\xcb\xd2\x4b\x3c\x29\x4e\xfd\x28\x4f\xe3\xe2\xaa\x9a\x95\x54\xe7\x4f\x8e\xfd\xff\x59\x89\xa1\x48\xcf\x74\x60\xe7\xf5\x75\xec\xa5\x85\xd7\xb7\xf7\x8f\x83\xee\x3c\x0b\xf7\xac\x5b\xf8\x3d\x75\x55\x99\xa8\x18\xd0\x3c\x6f\x11\x60\xe0\x90\xc2\x1f\xe7\xe5\x75\x7c\x6e\x3a\x2c\xcb\x5f\x00\x00\x00\xff\xff\x59\xa4\xcf\xe3\x4b\x02\x00\x00")

func dummyDeploymentPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_dummyDeploymentPatchYaml,
		"dummy/deployment-patch.yaml",
	)
}

func dummyDeploymentPatchYaml() (*asset, error) {
	bytes, err := dummyDeploymentPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dummy/deployment-patch.yaml", size: 587, mode: os.FileMode(0644), modTime: time.Unix(1592293761, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0xbc, 0xc0, 0xc0, 0x89, 0x34, 0x6c, 0x8f, 0x50, 0x48, 0xb, 0xc2, 0xe7, 0xec, 0x33, 0x2c, 0xa9, 0x65, 0xea, 0x8, 0xdb, 0x97, 0x34, 0x21, 0x4c, 0xd9, 0xfd, 0x99, 0x2b, 0x16, 0x39, 0x81}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"example/application/Dockerfile":                                                        exampleApplicationDockerfile,
	"example/application/hello.go":                                                          exampleApplicationHelloGo,
	"example/configurd/.gitignore":                                                          exampleConfigurdGitignore,
	"example/configurd/.workdir/default/hello-service/.helmignore":                          exampleConfigurdWorkdirDefaultHelloServiceHelmignore,
	"example/configurd/.workdir/default/hello-service/Chart.yaml":                           exampleConfigurdWorkdirDefaultHelloServiceChartYaml,
	"example/configurd/.workdir/default/hello-service/overrides.yaml":                       exampleConfigurdWorkdirDefaultHelloServiceOverridesYaml,
	"example/configurd/.workdir/default/hello-service/templates/_helpers.tpl":               exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTpl,
	"example/configurd/.workdir/default/hello-service/templates/deployment.yaml":            exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYaml,
	"example/configurd/.workdir/default/hello-service/templates/ingress.yaml":               exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYaml,
	"example/configurd/.workdir/default/hello-service/templates/service.yaml":               exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYaml,
	"example/configurd/.workdir/default/hello-service/templates/tests/test-connection.yaml": exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYaml,
	"example/configurd/.workdir/default/hello-service/values.yaml":                          exampleConfigurdWorkdirDefaultHelloServiceValuesYaml,
	"example/configurd/.workdir/default/hi-service/.helmignore":                             exampleConfigurdWorkdirDefaultHiServiceHelmignore,
	"example/configurd/.workdir/default/hi-service/Chart.yaml":                              exampleConfigurdWorkdirDefaultHiServiceChartYaml,
	"example/configurd/.workdir/default/hi-service/overrides.yaml":                          exampleConfigurdWorkdirDefaultHiServiceOverridesYaml,
	"example/configurd/.workdir/default/hi-service/templates/_helpers.tpl":                  exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTpl,
	"example/configurd/.workdir/default/hi-service/templates/deployment.yaml":               exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYaml,
	"example/configurd/.workdir/default/hi-service/templates/ingress.yaml":                  exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYaml,
	"example/configurd/.workdir/default/hi-service/templates/service.yaml":                  exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYaml,
	"example/configurd/.workdir/default/hi-service/templates/tests/test-connection.yaml":    exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYaml,
	"example/configurd/.workdir/default/hi-service/values.yaml":                             exampleConfigurdWorkdirDefaultHiServiceValuesYaml,
	"example/configurd/charts/example/.helmignore":                                          exampleConfigurdChartsExampleHelmignore,
	"example/configurd/charts/example/Chart.yaml":                                           exampleConfigurdChartsExampleChartYaml,
	"example/configurd/charts/example/templates/_helpers.tpl":                               exampleConfigurdChartsExampleTemplates_helpersTpl,
	"example/configurd/charts/example/templates/deployment.yaml":                            exampleConfigurdChartsExampleTemplatesDeploymentYaml,
	"example/configurd/charts/example/templates/ingress.yaml":                               exampleConfigurdChartsExampleTemplatesIngressYaml,
	"example/configurd/charts/example/templates/service.yaml":                               exampleConfigurdChartsExampleTemplatesServiceYaml,
	"example/configurd/charts/example/templates/tests/test-connection.yaml":                 exampleConfigurdChartsExampleTemplatesTestsTestConnectionYaml,
	"example/configurd/charts/example/values.yaml":                                          exampleConfigurdChartsExampleValuesYaml,
	"example/configurd/charts/mongodb/.helmignore":                                          exampleConfigurdChartsMongodbHelmignore,
	"example/configurd/charts/mongodb/Chart.yaml":                                           exampleConfigurdChartsMongodbChartYaml,
	"example/configurd/charts/mongodb/templates/_helpers.tpl":                               exampleConfigurdChartsMongodbTemplates_helpersTpl,
	"example/configurd/charts/mongodb/templates/deployment.yaml":                            exampleConfigurdChartsMongodbTemplatesDeploymentYaml,
	"example/configurd/charts/mongodb/templates/pv.yaml":                                    exampleConfigurdChartsMongodbTemplatesPvYaml,
	"example/configurd/charts/mongodb/templates/pvc.yaml":                                   exampleConfigurdChartsMongodbTemplatesPvcYaml,
	"example/configurd/charts/mongodb/templates/service.yaml":                               exampleConfigurdChartsMongodbTemplatesServiceYaml,
	"example/configurd/charts/mongodb/templates/tests/test-connection.yaml":                 exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYaml,
	"example/configurd/charts/mongodb/values.yaml":                                          exampleConfigurdChartsMongodbValuesYaml,
	"example/configurd/namespaces/local/hello-group.yml":                                    exampleConfigurdNamespacesLocalHelloGroupYml,
	"example/configurd/namespaces/local/mongodb-group.yml":                                  exampleConfigurdNamespacesLocalMongodbGroupYml,
	"example/configurd/services/example.yml":                                                exampleConfigurdServicesExampleYml,
	"example/configurd/services/hello-service.yml":                                          exampleConfigurdServicesHelloServiceYml,
	"example/configurd/services/hi-service.yml":                                             exampleConfigurdServicesHiServiceYml,
	"example/configurd/services/mongodb-service.yml":                                        exampleConfigurdServicesMongodbServiceYml,
	"dummy/Dockerfile":            dummyDockerfile,
	"dummy/deployment-patch.yaml": dummyDeploymentPatchYaml,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"dummy": &bintree{nil, map[string]*bintree{
		"Dockerfile":            &bintree{dummyDockerfile, map[string]*bintree{}},
		"deployment-patch.yaml": &bintree{dummyDeploymentPatchYaml, map[string]*bintree{}},
	}},
	"example": &bintree{nil, map[string]*bintree{
		"application": &bintree{nil, map[string]*bintree{
			"Dockerfile": &bintree{exampleApplicationDockerfile, map[string]*bintree{}},
			"hello.go":   &bintree{exampleApplicationHelloGo, map[string]*bintree{}},
		}},
		"configurd": &bintree{nil, map[string]*bintree{
			".gitignore": &bintree{exampleConfigurdGitignore, map[string]*bintree{}},
			".workdir": &bintree{nil, map[string]*bintree{
				"default": &bintree{nil, map[string]*bintree{
					"hello-service": &bintree{nil, map[string]*bintree{
						".helmignore":    &bintree{exampleConfigurdWorkdirDefaultHelloServiceHelmignore, map[string]*bintree{}},
						"Chart.yaml":     &bintree{exampleConfigurdWorkdirDefaultHelloServiceChartYaml, map[string]*bintree{}},
						"overrides.yaml": &bintree{exampleConfigurdWorkdirDefaultHelloServiceOverridesYaml, map[string]*bintree{}},
						"templates": &bintree{nil, map[string]*bintree{
							"_helpers.tpl":    &bintree{exampleConfigurdWorkdirDefaultHelloServiceTemplates_helpersTpl, map[string]*bintree{}},
							"deployment.yaml": &bintree{exampleConfigurdWorkdirDefaultHelloServiceTemplatesDeploymentYaml, map[string]*bintree{}},
							"ingress.yaml":    &bintree{exampleConfigurdWorkdirDefaultHelloServiceTemplatesIngressYaml, map[string]*bintree{}},
							"service.yaml":    &bintree{exampleConfigurdWorkdirDefaultHelloServiceTemplatesServiceYaml, map[string]*bintree{}},
							"tests": &bintree{nil, map[string]*bintree{
								"test-connection.yaml": &bintree{exampleConfigurdWorkdirDefaultHelloServiceTemplatesTestsTestConnectionYaml, map[string]*bintree{}},
							}},
						}},
						"values.yaml": &bintree{exampleConfigurdWorkdirDefaultHelloServiceValuesYaml, map[string]*bintree{}},
					}},
					"hi-service": &bintree{nil, map[string]*bintree{
						".helmignore":    &bintree{exampleConfigurdWorkdirDefaultHiServiceHelmignore, map[string]*bintree{}},
						"Chart.yaml":     &bintree{exampleConfigurdWorkdirDefaultHiServiceChartYaml, map[string]*bintree{}},
						"overrides.yaml": &bintree{exampleConfigurdWorkdirDefaultHiServiceOverridesYaml, map[string]*bintree{}},
						"templates": &bintree{nil, map[string]*bintree{
							"_helpers.tpl":    &bintree{exampleConfigurdWorkdirDefaultHiServiceTemplates_helpersTpl, map[string]*bintree{}},
							"deployment.yaml": &bintree{exampleConfigurdWorkdirDefaultHiServiceTemplatesDeploymentYaml, map[string]*bintree{}},
							"ingress.yaml":    &bintree{exampleConfigurdWorkdirDefaultHiServiceTemplatesIngressYaml, map[string]*bintree{}},
							"service.yaml":    &bintree{exampleConfigurdWorkdirDefaultHiServiceTemplatesServiceYaml, map[string]*bintree{}},
							"tests": &bintree{nil, map[string]*bintree{
								"test-connection.yaml": &bintree{exampleConfigurdWorkdirDefaultHiServiceTemplatesTestsTestConnectionYaml, map[string]*bintree{}},
							}},
						}},
						"values.yaml": &bintree{exampleConfigurdWorkdirDefaultHiServiceValuesYaml, map[string]*bintree{}},
					}},
				}},
			}},
			"charts": &bintree{nil, map[string]*bintree{
				"example": &bintree{nil, map[string]*bintree{
					".helmignore": &bintree{exampleConfigurdChartsExampleHelmignore, map[string]*bintree{}},
					"Chart.yaml":  &bintree{exampleConfigurdChartsExampleChartYaml, map[string]*bintree{}},
					"templates": &bintree{nil, map[string]*bintree{
						"_helpers.tpl":    &bintree{exampleConfigurdChartsExampleTemplates_helpersTpl, map[string]*bintree{}},
						"deployment.yaml": &bintree{exampleConfigurdChartsExampleTemplatesDeploymentYaml, map[string]*bintree{}},
						"ingress.yaml":    &bintree{exampleConfigurdChartsExampleTemplatesIngressYaml, map[string]*bintree{}},
						"service.yaml":    &bintree{exampleConfigurdChartsExampleTemplatesServiceYaml, map[string]*bintree{}},
						"tests": &bintree{nil, map[string]*bintree{
							"test-connection.yaml": &bintree{exampleConfigurdChartsExampleTemplatesTestsTestConnectionYaml, map[string]*bintree{}},
						}},
					}},
					"values.yaml": &bintree{exampleConfigurdChartsExampleValuesYaml, map[string]*bintree{}},
				}},
				"mongodb": &bintree{nil, map[string]*bintree{
					".helmignore": &bintree{exampleConfigurdChartsMongodbHelmignore, map[string]*bintree{}},
					"Chart.yaml":  &bintree{exampleConfigurdChartsMongodbChartYaml, map[string]*bintree{}},
					"templates": &bintree{nil, map[string]*bintree{
						"_helpers.tpl":    &bintree{exampleConfigurdChartsMongodbTemplates_helpersTpl, map[string]*bintree{}},
						"deployment.yaml": &bintree{exampleConfigurdChartsMongodbTemplatesDeploymentYaml, map[string]*bintree{}},
						"pv.yaml":         &bintree{exampleConfigurdChartsMongodbTemplatesPvYaml, map[string]*bintree{}},
						"pvc.yaml":        &bintree{exampleConfigurdChartsMongodbTemplatesPvcYaml, map[string]*bintree{}},
						"service.yaml":    &bintree{exampleConfigurdChartsMongodbTemplatesServiceYaml, map[string]*bintree{}},
						"tests": &bintree{nil, map[string]*bintree{
							"test-connection.yaml": &bintree{exampleConfigurdChartsMongodbTemplatesTestsTestConnectionYaml, map[string]*bintree{}},
						}},
					}},
					"values.yaml": &bintree{exampleConfigurdChartsMongodbValuesYaml, map[string]*bintree{}},
				}},
			}},
			"namespaces": &bintree{nil, map[string]*bintree{
				"local": &bintree{nil, map[string]*bintree{
					"hello-group.yml":   &bintree{exampleConfigurdNamespacesLocalHelloGroupYml, map[string]*bintree{}},
					"mongodb-group.yml": &bintree{exampleConfigurdNamespacesLocalMongodbGroupYml, map[string]*bintree{}},
				}},
			}},
			"services": &bintree{nil, map[string]*bintree{
				"example.yml":         &bintree{exampleConfigurdServicesExampleYml, map[string]*bintree{}},
				"hello-service.yml":   &bintree{exampleConfigurdServicesHelloServiceYml, map[string]*bintree{}},
				"hi-service.yml":      &bintree{exampleConfigurdServicesHiServiceYml, map[string]*bintree{}},
				"mongodb-service.yml": &bintree{exampleConfigurdServicesMongodbServiceYml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
